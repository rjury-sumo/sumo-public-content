{
    "type": "DashboardV2SyncDefinition",
    "name": "Search Audit Metadata Searched (20220420)",
    "description": "",
    "title": "Search Audit Metadata Searched (20220420)",
    "theme": "Light",
    "topologyLabelMap": {
        "data": {}
    },
    "refreshInterval": 0,
    "timeRange": {
        "type": "BeginBoundedTimeRange",
        "from": {
            "type": "RelativeTimeRangeBoundary",
            "relativeTime": "-6h"
        },
        "to": null
    },
    "layout": {
        "layoutType": "Grid",
        "layoutStructures": [
            {
                "key": "panelPANE-1D7306DEB0079A4C",
                "structure": "{\"height\":13,\"width\":24,\"x\":0,\"y\":46}"
            },
            {
                "key": "panelAA78EFEC9E7B4949",
                "structure": "{\"height\":13,\"width\":24,\"x\":0,\"y\":32}"
            },
            {
                "key": "panelD1F667969010194E",
                "structure": "{\"height\":14,\"width\":24,\"x\":0,\"y\":60}"
            },
            {
                "key": "panelPANE-7BCCFD2BAF869B42",
                "structure": "{\"height\":6,\"width\":24,\"x\":0,\"y\":0}"
            },
            {
                "key": "panel34046E0EB3A7B94B",
                "structure": "{\"height\":5,\"width\":24,\"x\":0,\"y\":6}"
            },
            {
                "key": "panel6E26DD539D1EDA49",
                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":11}"
            },
            {
                "key": "panel50DC42F58CF2684D",
                "structure": "{\"height\":11,\"width\":24,\"x\":0,\"y\":21}"
            },
            {
                "key": "panelPANE-E270F509BEDFAA4B",
                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":45}"
            },
            {
                "key": "panelA15D5BBF88E47B40",
                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":59}"
            }
        ]
    },
    "panels": [
        {
            "id": null,
            "key": "panelPANE-1D7306DEB0079A4C",
            "title": "Meta Per User",
            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "SumoSearchPanel",
            "queries": [
                {
                    "transient": false,
                    "queryString": "(_view=sumologic_search_usage_per_query) not query_type=sumo*\nuser_name={{user_name}} query={{query_pattern}} query_type={{query_type}} analytics_tier={{tier}}\n| where query matches /{{query_regex}}/\n| ((query_end_time - query_start_time ) /1000 / 60 ) as time_range_m\n//| sort execution_duration_ms\n| json field=scanned_bytes_breakdown \"Infrequent\" as inf_scan_bytes nodrop\n| if (isnull(inf_scan_bytes),0,inf_scan_bytes) as inf_scan_bytes\n| avg(execution_duration_ms) as avg_exec_ms,count as searches, sum(data_scanned_bytes) as data_scanned_bytes, sum(inf_scan_bytes) as inf_scan_bytes,sum(data_retrieved_bytes) as data_retrieved_bytes , sum(retrieved_message_count) as retrieved_events,avg(time_range_m) as avg_time_range_m by user_name,query_type,query,scanned_partition_count,is_aggregate,analytics_tier,status_message //,session_id\n| round((data_scanned_bytes /1024/1024/1024) * 10 )/10 as scan_gbytes\n| round((data_retrieved_bytes/1024/1024/1024) * 10 )/10 as retrieved_gbytes\n| round((inf_scan_bytes/1024/1024/1024) * 10) / 10 as inf_scan_gbytes\n\n| round(avg_exec_ms / 1000) as avg_exec_s\n| parse regex field = query \"(?i)(?<meta>(?:_sourcename|_sourcecategory|_source|_sourcehost|_collector|_index|_datatier) *(?:=|matches|in)[ \\\"]*[\\w+\\*\\\",/:\\\\\\.\\_-]+)\\\"*\"\n| replace(meta,\"\\\"\",\"\") as meta\n\n| sum(searches) as searches, sum(scan_gbytes) as scan_gbytes, values(analytics_tier) as tiers,values(query_type) as types, values(meta) as metas by user_name\n\n//| sum(searches) as searches, sum(scan_gbytes) as scan_gbytes, sum(inf_scan_gbytes) as inf_scan_gbytes, sum(retrieved_events) as retrieved_events, max(scanned_partition_count) as scanned_partitions, values(analytics_tier) as tiers,values(query_type) as types, values(meta) as metas by user_name | sort user_name asc\n//| sort avg_exec_ms",
                    "queryType": "Logs",
                    "queryKey": "A",
                    "metricsQueryMode": null,
                    "metricsQueryData": null,
                    "tracesQueryData": null,
                    "spansQueryData": null,
                    "parseMode": "Auto",
                    "timeSource": "Message"
                }
            ],
            "description": "",
            "timeRange": null,
            "coloringRules": null,
            "linkedDashboards": []
        },
        {
            "id": null,
            "key": "panelAA78EFEC9E7B4949",
            "title": "C. Meta Use High Level - Continous Features: dashboards, views, monitors",
            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "SumoSearchPanel",
            "queries": [
                {
                    "transient": false,
                    "queryString": "(_view=sumologic_search_usage_per_query) \n(query_type = *dashboard or query_type=sumo* or query_type=monitors or query_type=view*)\nuser_name={{user_name}} query={{query_pattern}} query_type={{query_type}} analytics_tier={{tier}}\n| where query matches /{{query_regex}}/\n| ((query_end_time - query_start_time ) /1000 / 60 ) as time_range_m\n//| sort execution_duration_ms\n| json field=scanned_bytes_breakdown \"Infrequent\" as inf_scan_bytes nodrop\n| if (isnull(inf_scan_bytes),0,inf_scan_bytes) as inf_scan_bytes\n| avg(execution_duration_ms) as avg_exec_ms,count as searches, sum(data_scanned_bytes) as data_scanned_bytes, sum(inf_scan_bytes) as inf_scan_bytes,sum(data_retrieved_bytes) as data_retrieved_bytes , sum(retrieved_message_count) as retrieved_events,avg(time_range_m) as avg_time_range_m by user_name,query_type,query,scanned_partition_count,is_aggregate,analytics_tier,status_message //,session_id\n| round((data_scanned_bytes /1024/1024/1024) * 10 )/10 as scan_gbytes\n| round((data_retrieved_bytes/1024/1024/1024) * 10 )/10 as retrieved_gbytes\n| round((inf_scan_bytes/1024/1024/1024) * 10) / 10 as inf_scan_gbytes\n\n| round(avg_exec_ms / 1000) as avg_exec_s\n| parse regex field = query \"(?i)(?<meta>_sourcename|_sourcecategory|_source|_sourcehost|_collector|_index|_datatier) *(?<op>=|matches|in)[ \\\"]*(?<value>[\\w+\\*\\\",/:\\\\\\.\\_-]+)\\\"*\"\n| replace(value,\"\\\"\",\"\") as value\n\n| count_distinct(user_name) as users, sum(searches) as searches, sum(scan_gbytes) as scan_gbytes, sum(inf_scan_gbytes) as inf_scan_gbytes, sum(retrieved_events) as retrieved_events, max(scanned_partition_count) as scanned_partitions by query_type,meta,value,analytics_tier | sort meta asc, value asc\n| sort users,searches,scan_gbytes",
                    "queryType": "Logs",
                    "queryKey": "A",
                    "metricsQueryMode": null,
                    "metricsQueryData": null,
                    "tracesQueryData": null,
                    "spansQueryData": null,
                    "parseMode": "Auto",
                    "timeSource": "Message"
                }
            ],
            "description": "",
            "timeRange": null,
            "coloringRules": null,
            "linkedDashboards": []
        },
        {
            "id": null,
            "key": "panelD1F667969010194E",
            "title": "Query Details",
            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "SumoSearchPanel",
            "queries": [
                {
                    "transient": false,
                    "queryString": "(_view=sumologic_search_usage_per_query) not query_type=sumo*\nuser_name={{user_name}} query={{query_pattern}} query_type={{query_type}} analytics_tier={{tier}}\n| where query matches /{{query_regex}}/\n\n| limit 1000\n| ((query_end_time - query_start_time ) /1000 / 60 ) as time_range_m\n//| sort execution_duration_ms\n| json field=scanned_bytes_breakdown \"Infrequent\" as inf_scan_bytes nodrop\n| if (isnull(inf_scan_bytes),0,inf_scan_bytes) as inf_scan_bytes\n| avg(execution_duration_ms) as avg_exec_ms,count as searches, sum(data_scanned_bytes) as data_scanned_bytes, sum(inf_scan_bytes) as inf_scan_bytes,sum(data_retrieved_bytes) as data_retrieved_bytes , sum(retrieved_message_count) as retrieved_events,avg(time_range_m) as avg_time_range_m by user_name,query_type,query,scanned_partition_count,is_aggregate,analytics_tier,status_message //,session_id\n| round((data_scanned_bytes /1024/1024/1024) * 10 )/10 as scan_gbytes\n| round((data_retrieved_bytes/1024/1024/1024) * 10 )/10 as retrieved_gbytes\n| round((inf_scan_bytes/1024/1024/1024) * 10) / 10 as inf_scan_gbytes\n| round(avg_exec_ms / 1000) as avg_exec_s\n//| parse regex field = query \"(?i)(?<meta>_sourcename|_sourcecategory|_source|_sourcehost|_collector) *(?<op>=|matches|in)[ \\\"]*(?<value>[\\w+\\*\\\",/-]+)\\\"*\"\n//| replace(value,\"\\\"\",\"\") as value\n| sum(searches) as searches, sum(scan_gbytes) as scan_gbytes, sum(inf_scan_gbytes) as inf_scan_gbytes, sum(retrieved_events) as retrieved_events, max(scanned_partition_count) as scanned_partitions by user_name, query_type,analytics_tier,query | sort  query asc\n//| sort avg_exec_ms",
                    "queryType": "Logs",
                    "queryKey": "A",
                    "metricsQueryMode": null,
                    "metricsQueryData": null,
                    "tracesQueryData": null,
                    "spansQueryData": null,
                    "parseMode": "Auto",
                    "timeSource": "Message"
                }
            ],
            "description": "",
            "timeRange": null,
            "coloringRules": null,
            "linkedDashboards": []
        },
        {
            "id": null,
            "key": "panelPANE-7BCCFD2BAF869B42",
            "title": "About",
            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"series\":{},\"text\":{\"format\":\"markdown\"}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "TextPanel",
            "text": "This dashboard uses the Search Audit index. metadata strings are parsed out using parse regex multi to give a filterable view of what users are querying.\n\nIt's intented use to to review search activity around one or more keywords or regular expessions in a query to identfy what metdata users have used to search, and what types of search they have used.\n\nYou can filter by various filters. note:\n- using a query match pattern will speed up the search.\n- the regex query filter is very powerful but also slower\n- other filters are vs a column before the first | so must match the whole colum for example ```*value*``` but are case insensitive\n"
        },
        {
            "id": null,
            "key": "panel34046E0EB3A7B94B",
            "title": "High Level Meta Views",
            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"series\":{},\"text\":{\"format\":\"markdown\"}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "TextPanel",
            "text": "Since a query can have more than one meta match value the total of the statistics for the bytes shown below could show > than actual totals. \n\nUse the high level panels A, B, C to look at:\n- search types that are possible infrequent tier (ui and api)\n- scheduled searches (less likely to be infrequent tier)\n- dashboards, monitors and views: unlikely to be infrequent tier candidates.\n"
        },
        {
            "id": null,
            "key": "panel6E26DD539D1EDA49",
            "title": "A. Meta Use High Level - Interactive Search and API (infrequent candidates)",
            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "SumoSearchPanel",
            "queries": [
                {
                    "transient": false,
                    "queryString": "(_view=sumologic_search_usage_per_query) \n(query_type = \"interactive search\" or query_type=\"search api\") \nnot query_type=sumo*\nuser_name={{user_name}} query={{query_pattern}} query_type={{query_type}} analytics_tier={{tier}}\n| where query matches /{{query_regex}}/\n| ((query_end_time - query_start_time ) /1000 / 60 ) as time_range_m\n//| sort execution_duration_ms\n| json field=scanned_bytes_breakdown \"Infrequent\" as inf_scan_bytes nodrop\n| if (isnull(inf_scan_bytes),0,inf_scan_bytes) as inf_scan_bytes\n| avg(execution_duration_ms) as avg_exec_ms,count as searches, sum(data_scanned_bytes) as data_scanned_bytes, sum(inf_scan_bytes) as inf_scan_bytes,sum(data_retrieved_bytes) as data_retrieved_bytes , sum(retrieved_message_count) as retrieved_events,avg(time_range_m) as avg_time_range_m by user_name,query_type,query,scanned_partition_count,is_aggregate,analytics_tier,status_message //,session_id\n| round((data_scanned_bytes /1024/1024/1024) * 10 )/10 as scan_gbytes\n| round((data_retrieved_bytes/1024/1024/1024) * 10 )/10 as retrieved_gbytes\n| round((inf_scan_bytes/1024/1024/1024) * 10) / 10 as inf_scan_gbytes\n\n| round(avg_exec_ms / 1000) as avg_exec_s\n| parse regex field = query \"(?i)(?<meta>_sourcename|_sourcecategory|_source|_sourcehost|_collector|_index|_datatier) *(?<op>=|matches|in)[ \\\"]*(?<value>[\\w+\\*\\\",/:\\\\\\.\\_-]+)\\\"*\"\n| replace(value,\"\\\"\",\"\") as value\n\n| count_distinct(user_name) as users, sum(searches) as searches, sum(scan_gbytes) as scan_gbytes, sum(inf_scan_gbytes) as inf_scan_gbytes, sum(retrieved_events) as retrieved_events, max(scanned_partition_count) as scanned_partitions by query_type,meta,value,analytics_tier | sort meta asc, value asc\n| sort users,searches,scan_gbytes",
                    "queryType": "Logs",
                    "queryKey": "A",
                    "metricsQueryMode": null,
                    "metricsQueryData": null,
                    "tracesQueryData": null,
                    "spansQueryData": null,
                    "parseMode": "Auto",
                    "timeSource": "Message"
                }
            ],
            "description": "",
            "timeRange": null,
            "coloringRules": null,
            "linkedDashboards": []
        },
        {
            "id": null,
            "key": "panel50DC42F58CF2684D",
            "title": "B. Meta Use High Level - Scheduled Search (Could be infrequent with ss beta)",
            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "SumoSearchPanel",
            "queries": [
                {
                    "transient": false,
                    "queryString": "(_view=sumologic_search_usage_per_query) \n(query_type = \"scheduled search\") \nnot query_type=sumo*\nuser_name={{user_name}} query={{query_pattern}} query_type={{query_type}} analytics_tier={{tier}}\n| where query matches /{{query_regex}}/\n| ((query_end_time - query_start_time ) /1000 / 60 ) as time_range_m\n//| sort execution_duration_ms\n| json field=scanned_bytes_breakdown \"Infrequent\" as inf_scan_bytes nodrop\n| if (isnull(inf_scan_bytes),0,inf_scan_bytes) as inf_scan_bytes\n| avg(execution_duration_ms) as avg_exec_ms,count as searches, sum(data_scanned_bytes) as data_scanned_bytes, sum(inf_scan_bytes) as inf_scan_bytes,sum(data_retrieved_bytes) as data_retrieved_bytes , sum(retrieved_message_count) as retrieved_events,avg(time_range_m) as avg_time_range_m by user_name,query_type,query,scanned_partition_count,is_aggregate,analytics_tier,status_message //,session_id\n| round((data_scanned_bytes /1024/1024/1024) * 10 )/10 as scan_gbytes\n| round((data_retrieved_bytes/1024/1024/1024) * 10 )/10 as retrieved_gbytes\n| round((inf_scan_bytes/1024/1024/1024) * 10) / 10 as inf_scan_gbytes\n\n| round(avg_exec_ms / 1000) as avg_exec_s\n| parse regex field = query \"(?i)(?<meta>_sourcename|_sourcecategory|_source|_sourcehost|_collector|_index|_datatier) *(?<op>=|matches|in)[ \\\"]*(?<value>[\\w+\\*\\\",/:\\\\\\.\\_-]+)\\\"*\"\n| replace(value,\"\\\"\",\"\") as value\n\n| count_distinct(user_name) as users, sum(searches) as searches, sum(scan_gbytes) as scan_gbytes, sum(inf_scan_gbytes) as inf_scan_gbytes, sum(retrieved_events) as retrieved_events, max(scanned_partition_count) as scanned_partitions by query_type,meta,value,analytics_tier | sort meta asc, value asc\n| sort users,searches,scan_gbytes",
                    "queryType": "Logs",
                    "queryKey": "A",
                    "metricsQueryMode": null,
                    "metricsQueryData": null,
                    "tracesQueryData": null,
                    "spansQueryData": null,
                    "parseMode": "Auto",
                    "timeSource": "Message"
                }
            ],
            "description": "",
            "timeRange": null,
            "coloringRules": null,
            "linkedDashboards": []
        },
        {
            "id": null,
            "key": "panelPANE-E270F509BEDFAA4B",
            "title": "Meta Maps",
            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "TextPanel",
            "text": ""
        },
        {
            "id": null,
            "key": "panelA15D5BBF88E47B40",
            "title": "Detail Query Limit 1000",
            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
            "keepVisualSettingsConsistentWithParent": true,
            "panelType": "TextPanel",
            "text": ""
        }
    ],
    "variables": [
        {
            "id": null,
            "name": "user_name",
            "displayName": "user_name",
            "defaultValue": "*",
            "sourceDefinition": {
                "variableSourceType": "CsvVariableSourceDefinition",
                "values": "jane.doe*"
            },
            "allowMultiSelect": false,
            "includeAllOption": true,
            "hideFromUI": false,
            "valueType": "Any"
        },
        {
            "id": null,
            "name": "query_regex",
            "displayName": "query_regex",
            "defaultValue": "^.",
            "sourceDefinition": {
                "variableSourceType": "CsvVariableSourceDefinition",
                "values": ".*,^.,a|b|c"
            },
            "allowMultiSelect": false,
            "includeAllOption": false,
            "hideFromUI": false,
            "valueType": "Any"
        },
        {
            "id": null,
            "name": "query_pattern",
            "displayName": "query_pattern",
            "defaultValue": "*",
            "sourceDefinition": {
                "variableSourceType": "CsvVariableSourceDefinition",
                "values": "*mycategory*,*_datatier*,*_index*,*ategory*"
            },
            "allowMultiSelect": false,
            "includeAllOption": true,
            "hideFromUI": false,
            "valueType": "Any"
        },
        {
            "id": null,
            "name": "query_type",
            "displayName": "query_type",
            "defaultValue": "*",
            "sourceDefinition": {
                "variableSourceType": "CsvVariableSourceDefinition",
                "values": "scheduled*,*dashboard*,interactive search,monitor,view*"
            },
            "allowMultiSelect": false,
            "includeAllOption": true,
            "hideFromUI": false,
            "valueType": "Any"
        },
        {
            "id": null,
            "name": "tier",
            "displayName": "tier",
            "defaultValue": "*",
            "sourceDefinition": {
                "variableSourceType": "CsvVariableSourceDefinition",
                "values": "*continuous*,*frequent*,*infrequent*"
            },
            "allowMultiSelect": false,
            "includeAllOption": true,
            "hideFromUI": false,
            "valueType": "Any"
        }
    ],
    "coloringRules": []
}