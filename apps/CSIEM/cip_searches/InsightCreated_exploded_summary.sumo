(//_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated
//OR
_index=sumologic_system_events _sourcecategory=cseinsight insightcreated
)

| json field=_raw "insight.description" as description
| json field=_raw "insight.riskScore" as riskscore
| json field=_raw "insight.severityName" as severityname
| json field=_raw "eventName"
//| json field=_raw "insightIdentity.id" as id
| json field=_raw "insightIdentity.readableId" as insightid
| json field=_raw "insight.status" as status
| json field=_raw "insight.name" as name
| json field=_raw "insight.entityType" as entitytype
| json field=_raw "insight.entityValue" as entityvalue
| json field=_raw "insight.tags" as tags
| json field=_raw "insight.severity" as severity
| json field=_raw "insight.confidence" as confidence
| json field=_raw "insight.signals" as signals

// in closed events
//| json field=_raw "insight.assignee" as assignee nodrop
//| json field=_raw "insight.resolution" as resolution nodrop

// in update events 
//| json field=_raw "to" as updates nodrop

// may exist after an update
//| json field=_raw "insight.timeToResponse" as timeToResponse nodrop
| json field=_raw "insight.timeToDetection" as timeToDetection nodrop
//| json field=_raw "insight.timeToRemediation" as timeToRemediation nodrop

//| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse
| if (isnull(timeToDetection),-1,round(timeToDetection/3600)) as timeToDetection
//| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation
//| sort _messagetime
| formatdate(tolong(_messagetime),"yyyy-MM-dd HH:mm:ss") as time
// ensure we only store the most recent result
| count by _messagetime,time,insightid,name,eventname,entitytype,entityvalue,status,severity,severityname,confidence,riskscore,description,signals,tags,timeToDetection //,assignee,resolution,_messagetime

// **** This code explodes out the embedded json arrays of tags and signals then will will squash down after *****
// lets squash down size of the signals field so we don't generate a massive lookup
| parse regex field=signals "\"ruleId\":\"(?<rule>[^\"]+\",\"ruleName\":\"[^\"]+\")" multi
| replace (rule,"\"","") as rule
| replace (rule,"ruleName","") as rule

| parse regex field=tags "\"(?<tag>[^\":,]+:[^\",:]+)\"" multi
| replace(tag,"_mitreAttack","") as tag
| parse regex field=signals "(?<signal>\{\"id\":\"[^\}]+\})" multi
//| json field=signal "tags" as signal_tags
//| parse regex field=signal_tags "\"(?<tag>[^\":,]+:[^\",:]+)\"" multi

| json field=signal "id" as signal_id nodrop
| json field=signal "created" as signal_created nodrop
| json field=signal "name" as signal_name nodrop
| json field=signal "summary" as signal_summary nodrop
| json field=signal "severity" as signal_severity nodrop
| json field=signal "ruleId" as ruleid nodrop
| json field=signal "ruleName" as rulename nodrop

//| concat("{\"time\":\"",signal_created,"\",\"name\":\"",signal_name,"\",\"sev\":",signal_severity,",\"summary\":\"",signal_summary,"\",\"rule\":\"",rulename,"\"}") as sig_blob
| concat(signal_created,"\t",signal_summary) as sig_blob

| sort insightid asc, signal_created asc
// final aggregation to save to a lookup with only one row for most recent status of insight
|  values(sig_blob) as signal_timeline,values(tag) as tags,values(rule) as rules, count as rows by _messagetime,time,insightid,name,eventname,entitytype,entityvalue,status,severity,severityname,confidence,riskscore,description,timeToDetection


| sort _messagetime asc | fields -rows

/*
onfigure webhooks for this query to use in alerting with one webhook per event

fields in our Query
{{ResultsJson._messagetime}}
{{ResultsJson.time}}
{{ResultsJson.insightid}}
{{ResultsJson.name}}
{{ResultsJson.eventName}}
{{ResultsJson.entitytype}}
{{ResultsJson.entityvalue}}
{{ResultsJson.status}}
{{ResultsJson.severity}}
{{ResultsJson.severityname}}
{{ResultsJson.confidence}}
{{ResultsJson.riskscore}}
{{ResultsJson.description}}
{{ResultsJson.timeToDetection}}
{{ResultsJson.signal_timeline}}
{{ResultsJson.tags}}
{{ResultsJson.rules}}

s/s version add 	"AlertURL": "{{AlertResponseURL}}", for monitor

{
  "AlertName": "Insight Alert: {{ResultsJson.eventName}} {{ResultsJson.insightid}} sev: {{ResultsJson.severityname}} for {{ResultsJson.entityvalue}}",
  "Description": "{{Description}}",
  "action": "create",
  "Time": "{{ResultsJson.time}}",
  "Insight":"{{ResultsJson.insightid}} {{ResultsJson.name}}",
  "Entity":"{{ResultsJson.entitytype}} {{ResultsJson.entityvalue}}",
  "Confidence":"{{ResultsJson.confidence}} ",
  "Riskscore":"{{ResultsJson.riskscore}}",
  "Rules":"{{ResultsJson.rules}}",
  "Tags":"{{ResultsJson.tags}}",
  "SignalTimeline":"{{ResultsJson.signal_timeline}}",
  "DetectionTimeHours":"{{ResultsJson.timeToDetection}}"
}
*/