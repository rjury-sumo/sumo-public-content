{
    "type": "FolderSyncDefinition",
    "name": "CSE Reflected Data",
    "description": "A collection of content for reflected data: insights, signals and records.",
    "children": [
        {
            "type": "FolderSyncDefinition",
            "name": "Content",
            "description": "",
            "children": [
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "CSE Rule",
                    "description": "",
                    "title": "CSE Rule",
                    "theme": "Light",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-1w"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panelPANE-180C2C6CB6DAE94D",
                                "structure": "{\"height\":4,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panelPANE-B065C3C49F08AB43",
                                "structure": "{\"height\":6,\"width\":24,\"x\":0,\"y\":20}"
                            },
                            {
                                "key": "panel6EF9CCDBBECC7B49",
                                "structure": "{\"height\":12,\"width\":10,\"x\":0,\"y\":40}"
                            },
                            {
                                "key": "panel8DC648C891BF6A43",
                                "structure": "{\"height\":6,\"width\":24,\"x\":0,\"y\":34}"
                            },
                            {
                                "key": "panel15EFCA5FBF5E984E",
                                "structure": "{\"height\":7,\"width\":14,\"x\":10,\"y\":52}"
                            },
                            {
                                "key": "panelD2E361DAA32CCB4A",
                                "structure": "{\"height\":6,\"width\":14,\"x\":10,\"y\":40}"
                            },
                            {
                                "key": "panel36F1CBF1AD004B45",
                                "structure": "{\"height\":2,\"width\":24,\"x\":0,\"y\":18}"
                            },
                            {
                                "key": "panelB35D2DBD822D684D",
                                "structure": "{\"height\":2,\"width\":24,\"x\":0,\"y\":4}"
                            },
                            {
                                "key": "panel6A39D3C1B7A36948",
                                "structure": "{\"height\":12,\"width\":24,\"x\":0,\"y\":6}"
                            },
                            {
                                "key": "panelDE3F2D67A00F0A4B",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":59}"
                            },
                            {
                                "key": "panel16280619AA592A4F",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":26}"
                            },
                            {
                                "key": "panelA443066AB004CA48",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":26}"
                            },
                            {
                                "key": "panel2E923265B34B394E",
                                "structure": "{\"height\":6,\"width\":14,\"x\":10,\"y\":46}"
                            },
                            {
                                "key": "panel0AFCC27287331B44",
                                "structure": "{\"height\":10,\"width\":16,\"x\":8,\"y\":69}"
                            },
                            {
                                "key": "panelDC302F6FBE56694A",
                                "structure": "{\"height\":10,\"width\":8,\"x\":0,\"y\":69}"
                            },
                            {
                                "key": "panelD35FBCEA912F4B4B",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":80}"
                            },
                            {
                                "key": "panelPANE-08F956B4BE9D394F",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":79}"
                            },
                            {
                                "key": "panelC9215CFFAF0D4A47",
                                "structure": "{\"height\":7,\"width\":10,\"x\":0,\"y\":52}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panelPANE-180C2C6CB6DAE94D",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "Use this dashboard to see information in insights, signals and records that pertain to a specific rule. \n\nTypical use case for this dashboard is to filter by rule keyword to one or more spedific rules to:\n-  determine how the rule is impacting generation of insights and signals\n- what are the top entities, source record types or deviceventids that might be reviewed to create tuning config (such as tuning expressions, match list updates or entity group configuration).\n- what source record metadata results in signal generation.\n\nFilter this dashboard to a specific rule using the rule id or a keyword string identifying the rule name. This is applied as a keyword search to the base searches."
                        },
                        {
                            "id": null,
                            "key": "panelPANE-B065C3C49F08AB43",
                            "title": "Signals Matching Rule",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":1},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| avg(severity) as severity,first(description) as description,count_distinct(entityid) as enitities,sum(is_suppressed) as suppressed,sum(is_generated) as generated by rule\n| sort rule asc",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel6EF9CCDBBECC7B49",
                            "title": "Signal Entities",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| avg(severity) as severity,sum(is_suppressed) as suppressed,sum(is_generated) as generated by entityid\n| sort generated,suppressed",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel8DC648C891BF6A43",
                            "title": "Signal Record Metadata",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n_index=sec_signal\n{{{rule}}}\n| json field=entities \"[0].value\" as entityid nodrop\n//\n| json field=fullRecords \"[*].metadata_vendor\" as vendors nodrop\n| json field=fullRecords \"[*].metadata_sourceCategory\" as sourceCategories nodrop\n| json field=fullRecords \"[*].metadata_product\" as products nodrop\n//| json field=fullRecords \"[*].metadata_mapperName\" as mapperNames nodrop\n//| json field=fullRecords \"[*].metadata_deviceEventId\" as deviceEventIds nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n| parse regex field=vendors \"(?<vendor>[\\w\\d_ -]+)\" multi\n| count_distinct(id) as signals by vendor,sourcecategories,products //,deviceEventIds\n\n| parse regex field=products \"(?<product>[\\w\\d_ -]+)\" multi\n| max(signals) as signals by vendor,product,sourcecategories //,deviceEventIds\n\n| parse regex field=sourcecategories \"(?<sourceCategory>[\\w\\d_ \\\\\\/-]+)\" multi\n| max(signals) as signals by vendor,product,sourcecategory //,deviceEventIds\n\n//| parse regex field=deviceEventIds \"(?<deviceEventId>[^\\r\\n\\\"\\[\\]\\{\\},]+)\" multi\n//| max(signals) as signals by vendor,product,sourcecategory,deviceEventId",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel15EFCA5FBF5E984E",
                            "title": "Device event ids",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n_index=sec_signal\n{{{rule}}}\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[*].metadata_vendor\" as vendors nodrop\n//| json field=fullRecords \"[*].metadata_sourceCategory\" as sourceCategories nodrop\n//| json field=fullRecords \"[*].metadata_product\" as products nodrop\n//| json field=fullRecords \"[*].metadata_mapperName\" as mapperNames nodrop\n| json field=fullRecords \"[*].metadata_deviceEventId\" as deviceEventIds nodrop\n\n//| concat (ruleid,\" \",rulename) as rule\n//| parse regex field=vendors \"(?<vendor>[\\w\\d_ -]+)\" multi\n//| count_distinct(id) as signals by vendor,sourcecategories,products //,deviceEventIds\n//\n//| parse regex field=products \"(?<product>[\\w\\d_ -]+)\" multi\n//| max(signals) as signals by vendor,product,sourcecategories //,deviceEventIds\n//\n| parse regex field=deviceEventIds \"(?<deviceEventId>[^\\r\\n\\\"\\[\\]\\{\\},]+)\" multi\n|  count_distinct(id) as signals by  deviceEventId\n\n| sort signals",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelD2E361DAA32CCB4A",
                            "title": "Mappers",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n_index=sec_signal\n{{{rule}}}\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[*].metadata_vendor\" as vendors nodrop\n//| json field=fullRecords \"[*].metadata_sourceCategory\" as sourceCategories nodrop\n//| json field=fullRecords \"[*].metadata_product\" as products nodrop\n| json field=fullRecords \"[*].metadata_mapperName\" as mapperNames nodrop\n//| json field=fullRecords \"[*].metadata_parser\" as parsers nodrop\n//\n////| concat (ruleid,\" \",rulename) as rule\n////| parse regex field=vendors \"(?<vendor>[\\w\\d_ -]+)\" multi\n////| count_distinct(id) as signals by vendor,sourcecategories,products //,deviceEventIds\n////\n////| parse regex field=products \"(?<product>[\\w\\d_ -]+)\" multi\n////| max(signals) as signals by vendor,product,sourcecategories //,deviceEventIds\n////\n//| parse regex field=deviceEventIds \"(?<deviceEventId>[^\\r\\n\\\"\\[\\]\\{\\},]+)\" multi\n| parse regex field=mappernames \"(?<mappername>[\\w\\d_ -]+)\" multi\n|  count_distinct(id) as signals by  mappername //,parsers\n\n//| parse regex field=parsers \"(?<parser>[\\w\\d_\\/ -]+)\" multi\n//| max(signals) as signals by mappername,parser",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel36F1CBF1AD004B45",
                            "title": "Signals",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "Matching data in sec_signal index. Use these panels to understand how many signals are generated and suppressed and which entities, and mapping metadata (such as product, vendor etc) generate signals."
                        },
                        {
                            "id": null,
                            "key": "panelB35D2DBD822D684D",
                            "title": "Insights",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "This section shows insights generated where this rule generated a contributing signal."
                        },
                        {
                            "id": null,
                            "key": "panel6A39D3C1B7A36948",
                            "title": "Rule Insight Generation",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":1},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{rule}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.riskScore\" as riskscore\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue ,risk_score,confidence\n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\",\\\"\",\" \") as rule\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| parse regex field=signals \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n| json field=signal \"id\" as signal_id\n\n\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| values(resolution) as resolutions,avg(risk_score) as risk,avg(confidence) as confidence,values(insightid) as insight,avg(severity) as sev, count_distinct(insightid) as insights,count_distinct(entityvalue) as entities, count_distinct(signal_id) as signals by rule ,entityvalue //,first(signals) as signals,\n| sort rule asc | where rule matches /(?i){{{rule}}}/\n| sev * signals as total_sev | sort total_sev",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelDE3F2D67A00F0A4B",
                            "title": "Rule Signal Tags",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=fullRecords \"[0].metadata_parser\" as parser nodrop\n| concat (ruleid,\" \",rulename) as rule\n\n| parse regex field=tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n//| count by attack_stage,tags | sort _count\n\n//| where !(tagname matches \"_mitreAttack*\")\n//|  sum(is_generated) as created by tagvalue,rule,product,vendor,entityid,severity,description| created * severity as total_sev | sort total_sev\n| max(severity) as max_sev,count_distinct(entityid) as entities,count_distinct(rule) as rules by tagname,tagvalue ",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel16280619AA592A4F",
                            "title": "Suppressed Vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| where !(isempty(suppressedReasons))\n\n| timeslice  | count as suppressed  by _timeslice | compare with timeshift 7d",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelA443066AB004CA48",
                            "title": "Generated Vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| where (isempty(suppressedReasons))\n//\n//\n| timeslice  | count as generated  by _timeslice | compare with timeshift 7d",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel2E923265B34B394E",
                            "title": "Parsers",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n_index=sec_signal\n{{{rule}}}\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[*].metadata_vendor\" as vendors nodrop\n//| json field=fullRecords \"[*].metadata_sourceCategory\" as sourceCategories nodrop\n//| json field=fullRecords \"[*].metadata_product\" as products nodrop\n//| json field=fullRecords \"[*].metadata_mapperName\" as mapperNames nodrop\n| json field=fullRecords \"[*].metadata_parser\" as parsers nodrop\n//\n////| concat (ruleid,\" \",rulename) as rule\n////| parse regex field=vendors \"(?<vendor>[\\w\\d_ -]+)\" multi\n////| count_distinct(id) as signals by vendor,sourcecategories,products //,deviceEventIds\n////\n////| parse regex field=products \"(?<product>[\\w\\d_ -]+)\" multi\n////| max(signals) as signals by vendor,product,sourcecategories //,deviceEventIds\n////\n//| parse regex field=deviceEventIds \"(?<deviceEventId>[^\\r\\n\\\"\\[\\]\\{\\},]+)\" multi\n//| parse regex field=mappernames \"(?<mappername>[\\w\\d_ -]+)\" multi\n//|  count_distinct(id) as signals by  mappername //,parsers\n//\n| parse regex field=parsers \"(?<parser>[\\w\\d_\\/ -]+)\" multi\n|  count_distinct(id) as signals by parser",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel0AFCC27287331B44",
                            "title": "Supppression Reasons (details)",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| json field=entities \"[0].value\" as entityid\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n| where suppressed=\"YES\"\n\n| concat (ruleid,\" \",rulename) as rule\n| parse regex field=suppressedreasons \"\\\"(?<suppress_by>[^\\\":\\[\\]]+)\" multi\n| count_distinct(id) as suppressed_signals,values(suppress_by) as reasons by entityid | sort suppressed_signals\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelDC302F6FBE56694A",
                            "title": "Supppression Reasons ",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n| json field=entities \"[0].value\" as entityid\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n| where suppressed=\"YES\"\n\n| concat (ruleid,\" \",rulename) as rule\n| parse regex field=suppressedreasons \"\\\"(?<suppress_by>[^\\\":\\[\\]]+)\" multi\n| count_distinct(entityid) as entities,count_distinct(id) as suppressed_signals by suppress_by",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelD35FBCEA912F4B4B",
                            "title": "Auditing Rule Configuration Changes",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n*Rule*\n\n{{{rule}}}\n//THRESHOLD-S00096\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" as old nodrop\n| json field=_raw \"to\" as new nodrop\n\n| json field=_raw \"templatedMatchRule\" as rulea nodrop\n| json field=_raw \"matchRule\" as ruleb nodrop\n| json field=_raw \"yaraRule\" as rulec nodrop\n| json field=_raw \"thresholdRule\" as ruled nodrop\n| json field=_raw \"chainRule\" as rulee nodrop\n| json field=_raw \"aggregationRule\" as rulef nodrop\n\n| rulea as rule\n| if(isempty(rule),ruleb,rule) as rule\n| if(isempty(rule),rulec,rule) as rule\n| if(isempty(rule),ruled,rule) as rule\n| if(isempty(rule),rulee,rule) as rule\n| if(isempty(rule),rulef,rule) as rule\n\n//| where isempty(rule)\n\n| json field=rule \"readableId\" as id\n| json field=rule \"name\"\n| json field=rule \"enabled\"\n| json field=rule \"expression\"\n| json field=rule \"severityMapping\"\n| json field=rule \"tuningExpressions\"\n| json field=rule \"isPrototype\"\n| json field=rule \"tags\"\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm\") as time\n| count by time,_messagetime,eventname,id,name,enabled,isPrototype,operator,expression,severitymapping,tuningexpressions,tags, old,new | fields -_count // tuningexpressions\n| where id matches /(?i){{{rule}}}/\n| sort _messagetime  | fields -_messagetime",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelPANE-08F956B4BE9D394F",
                            "title": "Audit Events For This Rule",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panelC9215CFFAF0D4A47",
                            "title": "Sourcecategories",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n{{{rule}}}\n\n_index=sec_signal\n{{{rule}}}\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[*].metadata_vendor\" as vendors nodrop\n| json field=fullRecords \"[*].metadata_sourceCategory\" as sourceCategories nodrop\n//| json field=fullRecords \"[*].metadata_product\" as products nodrop\n//| json field=fullRecords \"[*].metadata_mapperName\" as mapperNames nodrop\n//| json field=fullRecords \"[*].metadata_deviceEventId\" as deviceEventIds nodrop\n\n//| concat (ruleid,\" \",rulename) as rule\n| parse regex field=sourceCategories \"(?<sourcecategory>[\\w\\d_\\/\\.-]+)\" multi\n| count_distinct(id) as signals by sourcecategory\n//\n| sort signals",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "rule",
                            "displayName": "rule",
                            "defaultValue": "THRESHOLD-S00096",
                            "sourceDefinition": {
                                "variableSourceType": "LogQueryVariableSourceDefinition",
                                "query": "_index=sec_signal | count by ruleid | sort ruleid asc",
                                "field": "ruleId"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                },
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "CSE Rules And Mapping Changes",
                    "description": "",
                    "title": "CSE Rules And Mapping Changes",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-4w2d"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panelPANE-7E82F798AB8C5942",
                                "structure": "{\"height\":10,\"width\":12,\"x\":0,\"y\":13}"
                            },
                            {
                                "key": "panelE4C509D1A4F4EA4D",
                                "structure": "{\"height\":10,\"width\":12,\"x\":12,\"y\":13}"
                            },
                            {
                                "key": "panelB415C36BB1267841",
                                "structure": "{\"height\":9,\"width\":12,\"x\":0,\"y\":23}"
                            },
                            {
                                "key": "panel1098C4998C27F944",
                                "structure": "{\"height\":9,\"width\":12,\"x\":12,\"y\":23}"
                            },
                            {
                                "key": "panelB836BB5E8B3EBB43",
                                "structure": "{\"height\":11,\"width\":24,\"x\":0,\"y\":32}"
                            },
                            {
                                "key": "panel82AFBE9A9529B94C",
                                "structure": "{\"height\":9,\"width\":12,\"x\":0,\"y\":3}"
                            },
                            {
                                "key": "panelB385C1DA9D89AA4C",
                                "structure": "{\"height\":9,\"width\":12,\"x\":12,\"y\":3}"
                            },
                            {
                                "key": "panelPANE-AB19AA6FB9B53A47",
                                "structure": "{\"height\":3,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel2A05B6AD83504B4D",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":12}"
                            },
                            {
                                "key": "panelDAC9736494B82B4D",
                                "structure": "{\"height\":18,\"width\":24,\"x\":0,\"y\":44}"
                            },
                            {
                                "key": "panelF39B4A26B12B0B4F",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":43}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panelPANE-7E82F798AB8C5942",
                            "title": "Rules Changes",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10},\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n*rule*\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" nodrop\n| json field=_raw \"to\" nodrop\n\n| json field=_raw \"templatedMatchRule\" as rulea nodrop\n| json field=_raw \"matchRule\" as ruleb nodrop\n| json field=_raw \"yaraRule\" as rulec nodrop\n| json field=_raw \"thresholdRule\" as ruled nodrop\n| json field=_raw \"chainRule\" as rulee nodrop\n| json field=_raw \"aggregationRule\" as rulef nodrop\n\n| rulea as rule\n| if(isempty(rule),ruleb,rule) as rule\n| if(isempty(rule),rulec,rule) as rule\n| if(isempty(rule),ruled,rule) as rule\n| if(isempty(rule),rulee,rule) as rule\n| if(isempty(rule),rulef,rule) as rule\n\n//| where isempty(rule)\n\n| json field=rule \"readableId\" as id\n| json field=rule \"name\"\n| json field=rule \"enabled\"\n| json field=rule \"expression\"\n| json field=rule \"severityMapping\"\n| json field=rule \"tuningExpressions\"\n| json field=rule \"isPrototype\"\n| json field=rule \"tags\"\n| count as events,values(eventname) as eventnames by id,name // tuningexpressions\n | sort name asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelE4C509D1A4F4EA4D",
                            "title": "Rules With Most Recent enabled = false or isPrototype = true",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10},\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n*rule*\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" nodrop\n| json field=_raw \"to\" nodrop\n\n| json field=_raw \"templatedMatchRule\" as rulea nodrop\n| json field=_raw \"matchRule\" as ruleb nodrop\n| json field=_raw \"yaraRule\" as rulec nodrop\n| json field=_raw \"thresholdRule\" as ruled nodrop\n| json field=_raw \"chainRule\" as rulee nodrop\n| json field=_raw \"aggregationRule\" as rulef nodrop\n\n| rulea as rule\n| if(isempty(rule),ruleb,rule) as rule\n| if(isempty(rule),rulec,rule) as rule\n| if(isempty(rule),ruled,rule) as rule\n| if(isempty(rule),rulee,rule) as rule\n| if(isempty(rule),rulef,rule) as rule\n\n//| where isempty(rule)\n\n| json field=rule \"readableId\" as id\n| json field=rule \"name\"\n| json field=rule \"enabled\"\n| json field=rule \"expression\"\n| json field=rule \"severityMapping\"\n| json field=rule \"tuningExpressions\"\n| json field=rule \"isPrototype\"\n| json field=rule \"tags\"\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm\") as time\n| sort _messagetime\n| first(time) as time,max(_messagetime) as _messagetime,first(enabled) as enabled, first(isPrototype) as isPrototype by id,name \n| where enabled = \"false\" or isprototype = \"true\" //,expression,tags //,from,to  // tuningexpressions\n| sort _messagetime  | fields -_messagetime //| where enabled = \"",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB415C36BB1267841",
                            "title": "Rules Deleted",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10},\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n*RuleDeleted\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" nodrop\n| json field=_raw \"to\" nodrop\n\n| json field=_raw \"templatedMatchRule\" as rulea nodrop\n| json field=_raw \"matchRule\" as ruleb nodrop\n| json field=_raw \"yaraRule\" as rulec nodrop\n| json field=_raw \"thresholdRule\" as ruled nodrop\n| json field=_raw \"chainRule\" as rulee nodrop\n| json field=_raw \"aggregationRule\" as rulef nodrop\n\n| rulea as rule\n| if(isempty(rule),ruleb,rule) as rule\n| if(isempty(rule),rulec,rule) as rule\n| if(isempty(rule),ruled,rule) as rule\n| if(isempty(rule),rulee,rule) as rule\n| if(isempty(rule),rulef,rule) as rule\n\n//| where isempty(rule)\n\n| json field=rule \"readableId\" as id\n| json field=rule \"name\"\n| json field=rule \"enabled\"\n| json field=rule \"expression\"\n| json field=rule \"severityMapping\"\n| json field=rule \"tuningExpressions\"\n| json field=rule \"isPrototype\"\n| json field=rule \"tags\"\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm\") as time\n| count by time,_messagetime,id,name,operator | fields -_count // tuningexpressions\n| sort _messagetime  | fields -_messagetime",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel1098C4998C27F944",
                            "title": "Rules Created",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10},\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n*RuleCreated\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" nodrop\n| json field=_raw \"to\" nodrop\n\n| json field=_raw \"templatedMatchRule\" as rulea nodrop\n| json field=_raw \"matchRule\" as ruleb nodrop\n| json field=_raw \"yaraRule\" as rulec nodrop\n| json field=_raw \"thresholdRule\" as ruled nodrop\n| json field=_raw \"chainRule\" as rulee nodrop\n| json field=_raw \"aggregationRule\" as rulef nodrop\n\n| rulea as rule\n| if(isempty(rule),ruleb,rule) as rule\n| if(isempty(rule),rulec,rule) as rule\n| if(isempty(rule),ruled,rule) as rule\n| if(isempty(rule),rulee,rule) as rule\n| if(isempty(rule),rulef,rule) as rule\n\n//| where isempty(rule)\n\n| json field=rule \"readableId\" as id\n| json field=rule \"name\"\n| json field=rule \"enabled\"\n| json field=rule \"expression\"\n| json field=rule \"severityMapping\"\n| json field=rule \"tuningExpressions\"\n| json field=rule \"isPrototype\"\n| json field=rule \"tags\"\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm\") as time\n| count by time,_messagetime,id,name,enabled,isPrototype | fields -_count // tuningexpressions\n| sort _messagetime  | fields -_messagetime",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB836BB5E8B3EBB43",
                            "title": "Detailed Rule Events",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"fontSize\":10},\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n*Rule*\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" as old nodrop\n| json field=_raw \"to\" as new nodrop\n\n| json field=_raw \"templatedMatchRule\" as rulea nodrop\n| json field=_raw \"matchRule\" as ruleb nodrop\n| json field=_raw \"yaraRule\" as rulec nodrop\n| json field=_raw \"thresholdRule\" as ruled nodrop\n| json field=_raw \"chainRule\" as rulee nodrop\n| json field=_raw \"aggregationRule\" as rulef nodrop\n\n| rulea as rule\n| if(isempty(rule),ruleb,rule) as rule\n| if(isempty(rule),rulec,rule) as rule\n| if(isempty(rule),ruled,rule) as rule\n| if(isempty(rule),rulee,rule) as rule\n| if(isempty(rule),rulef,rule) as rule\n\n//| where isempty(rule)\n\n| json field=rule \"readableId\" as id\n| json field=rule \"name\"\n| json field=rule \"enabled\"\n| json field=rule \"expression\"\n| json field=rule \"severityMapping\"\n| json field=rule \"tuningExpressions\"\n| json field=rule \"isPrototype\"\n| json field=rule \"tags\"\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm\") as time\n| count by time,_messagetime,eventname,id,name,enabled,isPrototype,operator,expression,severitymapping,tuningexpressions,tags, old,new | fields -_count // tuningexpressions\n| sort _messagetime  | fields -_messagetime",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel82AFBE9A9529B94C",
                            "title": "Events Over Time",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n(*Rule* or *Mapping*)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\" or eventname matches \"*Mapping*\"\n| timeslice | count by _timeslice, eventname | transpose row _timeslice column eventname",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB385C1DA9D89AA4C",
                            "title": "Events By Operator",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n(*Rule* or *Mapping*)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Rule*\" or eventname matches \"*Mapping*\"\n| json field=_raw \"operator.email\" as operator nodrop\n\n| timeslice | count by _timeslice, operator | transpose row _timeslice column operator",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelPANE-AB19AA6FB9B53A47",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "Use this dashboard to review changes to your CSE rule set. \n\nFor the release history of Sumo Logic managed content changes see: https://app.getbeamer.com/cloudsiementerprise/en?search=content"
                        },
                        {
                            "id": null,
                            "key": "panel2A05B6AD83504B4D",
                            "title": "Rules Changes",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panelDAC9736494B82B4D",
                            "title": "Log Mapping Change Details",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"fontSize\":10},\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cse* \nOR\n_index=sumologic_system_events _sourcecategory=cse* )\n\n*Mapping*\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| where eventname matches \"*Mapping*\"\n| json field=_raw \"operator.email\" as operator nodrop\n| json field=_raw \"from\" as old nodrop\n| json field=_raw \"to\" as new nodrop\n\n| json field=_raw \"logMapping\"\n\n//\n| json field=logMapping \"id\" \n| json field=logMapping \"name\"\n| json field=logMapping \"source\"\n| json field=logMapping \"recordType\"\n| json field=logMapping \"enabled\"\n| json field=logMapping \"vendor\"\n| json field=logMapping \"product\"\n| json field=logMapping \"fields\" nodrop\n\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm\") as time\n| count by time,_messagetime,eventname,id,name,enabled,source,recordtype,vendor,product,fields | fields -_count // tuningexpressions\n| sort _messagetime  | fields -_messagetime",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelF39B4A26B12B0B4F",
                            "title": "Log Mappings",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "keywords",
                            "displayName": "keywords",
                            "defaultValue": "*",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "keyword,*starword,"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Entity",
            "description": "",
            "children": [
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "Single Entity View",
                    "description": "A dashboard for reviewing reflected entity data from CSE.",
                    "title": "Single Entity View",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-1d"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panel0AFB51868C47D84F",
                                "structure": "{\"height\":11,\"width\":12,\"x\":0,\"y\":87}"
                            },
                            {
                                "key": "panelD33237CAB543384A",
                                "structure": "{\"height\":13,\"width\":24,\"x\":0,\"y\":98}"
                            },
                            {
                                "key": "panelB8321E8CBBC82A4D",
                                "structure": "{\"height\":4,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel6BF97B2490785A46",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":47}"
                            },
                            {
                                "key": "panel7121A2178C14BB4B",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":73}"
                            },
                            {
                                "key": "panel64B1DA37B00D8A45",
                                "structure": "{\"height\":11,\"width\":10,\"x\":0,\"y\":5}"
                            },
                            {
                                "key": "panel9DA725CEB2E2384E",
                                "structure": "{\"height\":13,\"width\":24,\"x\":0,\"y\":48}"
                            },
                            {
                                "key": "panel4B2CC916875D6A41",
                                "structure": "{\"height\":9,\"width\":24,\"x\":0,\"y\":27}"
                            },
                            {
                                "key": "panel12890CF0BC114B47",
                                "structure": "{\"height\":11,\"width\":14,\"x\":10,\"y\":16}"
                            },
                            {
                                "key": "panelB6E9031E908A1849",
                                "structure": "{\"height\":11,\"width\":10,\"x\":0,\"y\":16}"
                            },
                            {
                                "key": "panelAF1B7B409827894F",
                                "structure": "{\"height\":13,\"width\":24,\"x\":0,\"y\":74}"
                            },
                            {
                                "key": "panel69E66D2FA6E3B94F",
                                "structure": "{\"height\":11,\"width\":12,\"x\":12,\"y\":87}"
                            },
                            {
                                "key": "panel883F2A7FA1D4FA44",
                                "structure": "{\"height\":11,\"width\":24,\"x\":0,\"y\":36}"
                            },
                            {
                                "key": "panel5A0EAD8BBD395943",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":4}"
                            },
                            {
                                "key": "panel6345E8399792194D",
                                "structure": "{\"height\":12,\"width\":24,\"x\":0,\"y\":61}"
                            },
                            {
                                "key": "panelD6964474AE357948",
                                "structure": "{\"height\":11,\"width\":14,\"x\":10,\"y\":5}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panel0AFB51868C47D84F",
                            "title": "Signals Over Time",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"default\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal  {{{entity}}}\n| if (isempty(suppressedReasons),\"NO\",\"YES\") as suppressed\n//\n//\n| if(suppressed=\"YES\",1,0) as s\n| if(suppressed=\"NO\",1,0) as g\n| timeslice  | sum(s) as suppresed, sum(g) as generated  by _timeslice //| compare with timeshift 7d",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelD33237CAB543384A",
                            "title": "Signals Ingestion Mapping and Suppression",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{entity}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=fullRecords \"[0].metadata_parser\" as parser nodrop\n| concat (ruleid,\" \",rulename) as rule\n\n|  sum(is_suppressed) as suppressed,sum(is_generated) as created by rule,product,vendor,sourceCategory,parser,mapperName,deviceEventId| sort created\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB8321E8CBBC82A4D",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "This dashboard shows key insights and signals with a lens designed for reviewing a single entity.\n\nYou can enter any entity name in the entity paramenter, it will be applied in panel searches as a keyword. This means in theory you can use more complex scopes if you like such as ``` ( entitya or entityb)```\n\nThis dashboard is designed to be able to be linked as a CSE Action using the entity as the variable see: https://help.sumologic.com/docs/cse/administration/create-cse-context-actions/. This enables a detailed drilldown to here for a specific entity from the CSE UI.\n\nVersion: 20230222"
                        },
                        {
                            "id": null,
                            "key": "panel6BF97B2490785A46",
                            "title": "Insights",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel7121A2178C14BB4B",
                            "title": "Signals",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel64B1DA37B00D8A45",
                            "title": "Insights Generated Over Time",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[],\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sumologic_system_events _sourcecategory=cseinsight insightcreated\n\n{{entity}}\n\n| json field=_raw \"insight.entityValue\" as entity\n| where entity matches \"{{entity}}\"\n\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.severity\" as severity\n\n| timeslice\n| first(severity) as severity, count as events by _timeslice,insightid,entity\n\n// severity used to be numeric but now it's not\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n| s as severity\n| if(s = 1,\"LOW\",\"OTHER\") as severity\n| if(s = 2,\"MEDIUM\",severity) as severity\n| if(s = 3,\"HIGH\",severity) as severity\n| if(s = 4,\"CRITICAL\",severity) as severity\n\n| count as insights by _timeslice,severity | transpose row _timeslice column severity\n\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel9DA725CEB2E2384E",
                            "title": "Rules In Insights",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"timeSeries\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated\n\n{{entity}}\n\n| json field=_raw \"insight.entityValue\" as entity\n\n| where entity matches \"{{entity}}\"\n| json field=_raw \"eventName\" nodrop\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n//// lets squash down size of the signals field so we don't generate a massive lookup\n//| replace (rule,\"\\\",\\\"\",\" \") as rule\n//| replace (rule,\"\\\"\",\"\") as rule\n//| replace (rule,\"ruleName\",\"\") as rule\n////\n//| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| parse regex field=signal \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n| json field=signal \"id\",\"name\",\"severity\",\"summary\",\"description\",\"ruleId\",\"ruleName\",\"tags\",\"suppressedReasons\",\"created\" nodrop\n\n// squshdown\n| count by created,insightid,id,name,severity,summary,description,ruleid,rulename,tags | fields -_count \n|  values(insightid) as insights,max(severity) as severity, count_distinct(id) as signals,first(name) as example_name,first(description) as example_description,first(tags) as example_tags by ruleid,rulename  //,first(signals) as signals,\n| sort rulename asc",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel4B2CC916875D6A41",
                            "title": "Insight Event History",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"timeSeries\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{entity}}\n\n| json field=_raw \"insight.entityValue\" as entity\n| where entity matches \"{{entity}}\"\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n| json field=_raw \"to\" as updates nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm:ss\") as time\n// severity used to be numeric but now it's not\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n| s as severity\n| if(s = 1,\"LOW\",\"OTHER\") as severity\n| if(s = 2,\"MEDIUM\",severity) as severity\n| if(s = 3,\"HIGH\",severity) as severity\n| if(s = 4,\"CRITICAL\",severity) as severity\n\n// ensure we only store the most recent result\n| count by time,insightid,name,eventname,entity,status,severity,confidence,assignee,resolution,_messagetime\n| sort _messagetime | fields -_count,_messagetime\n\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel12890CF0BC114B47",
                            "title": "Signals High Level Summary",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"timeSeries\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_index=sec_signal\n {{entity}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(entityid) as entities,sum(is_suppressed) as suppressed,sum(is_generated) as generated by rule,severity,product,vendor,sourceCategory\n| severity * generated as total_severity\n| sort total_severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB6E9031E908A1849",
                            "title": "Signals Generated Over Time By Rule",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"default\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{entity}}}\n\n| where (isempty(suppressedreasons))\n\n//| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| timeslice  | count by rule,_timeslice | transpose row _timeslice column rule\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelAF1B7B409827894F",
                            "title": "Rules Fired With Descriptions",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{entity}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| values(entityid) as entity_list,sum(is_generated) as generated,sum(is_suppressed) as suppresed by rule,severity,description,tags | sort rule asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel69E66D2FA6E3B94F",
                            "title": "Signal Impact By Entity",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"timeSeries\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{entity}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(rule) as rules,sum(is_suppressed) as suppressed,sum(is_generated) as generated by entityid,severity\n| severity * generated as total_severity\n| sort total_severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel883F2A7FA1D4FA44",
                            "title": "Signals History",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"timeSeries\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_index=sec_signal\n {{entity}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n| timeslice 1m\n| count,sum(is_suppressed) as suppressed,sum(is_generated) as generated by _timeslice, entityid, rule,severity,product,vendor,sourceCategory,deviceEventId\n| sort _timeslice ",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel5A0EAD8BBD395943",
                            "title": "Timeline And Summary",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel6345E8399792194D",
                            "title": "Tags In Signals That Generated An Insight",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated\n\n{{entity}}\n\n| json field=_raw \"insight.entityValue\" as entity\n\n| where entity matches \"{{entity}}\"\n| json field=_raw \"eventName\" nodrop\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n//// lets squash down size of the signals field so we don't generate a massive lookup\n//| replace (rule,\"\\\",\\\"\",\" \") as rule\n//| replace (rule,\"\\\"\",\"\") as rule\n//| replace (rule,\"ruleName\",\"\") as rule\n////\n//| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| parse regex field=signal \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n| json field=signal \"id\",\"name\",\"severity\",\"summary\",\"description\",\"ruleId\",\"ruleName\",\"tags\",\"suppressedReasons\",\"created\" nodrop\n\n// squshdown\n| count by created,insightid,id,name,severity,summary,description,ruleid,rulename,tags,entityvalue | fields -_count \n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n\n// tactics\n| parse field=tag \"_mitreAttackTactic:*\" as tactic nodrop\n| \"\" as stage\n| if(tactic = \"TA0043\",\"a.Reconnaissance\",stage) as stage\n| if(tactic = \"TA0042\",\"b.Resource Development\",stage) as stage\n| if(tactic = \"TA0001\",\"c.Initial Access\",stage) as stage\n| if(tactic = \"TA0002\",\"d.Execution\",stage) as stage\n| if(tactic = \"TA0003\",\"e.Persistence\",stage) as stage\n| if(tactic = \"TA0004\",\"f.Privilege Escalation\",stage) as stage\n| if(tactic = \"TA0005\",\"g.Defense Evasion\",stage) as stage\n| if(tactic = \"TA0006\",\"h.Credential Access\",stage) as stage\n| if(tactic = \"TA0007\",\"i.Discovery\",stage) as stage\n| if(tactic = \"TA0008\",\"j.Lateral Movement\",stage) as stage\n| if(tactic = \"TA0009\",\"k.Collection\",stage) as stage\n| if(tactic = \"TA0011\",\"l.Command and Control\",stage) as stage\n| if(tactic = \"TA0010\",\"m.Exfiltration\",stage) as stage\n| if(tactic = \"TA0040\",\"n.Impact\",stage) as stage\n\n\n// tech\n| replace(tag,\"_mitreAttackTechnique:\",\"\") as T\n| replace(T,\".\",\"/\") as T\n| concat(\"https://attack.mitre.org/techniques/\",T) as Tl\n| if( tag matches \"_mitreAttackTech*\",tourl(Tl,T),\"\") as Mitre\n| if(!(isempty(stage)),stage,Mitre) as Mitre\n\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| avg(severity) as avg_sev, count_distinct(insightid) as insights,count_distinct(entityvalue) as entities, count_distinct(id) as signals by tag,Mitre  //,first(signals) as signals,\n| sort tag asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelD6964474AE357948",
                            "title": "Rules In Insights Signals",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sumologic_system_events _sourcecategory=cseinsight insightcreated\n\n{{entity}}\n\n| json field=_raw \"insight.entityValue\" as entity\n\n| where entity matches \"{{entity}}\"\n| json field=_raw \"eventName\" nodrop\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n//// lets squash down size of the signals field so we don't generate a massive lookup\n//| replace (rule,\"\\\",\\\"\",\" \") as rule\n//| replace (rule,\"\\\"\",\"\") as rule\n//| replace (rule,\"ruleName\",\"\") as rule\n////\n//| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| parse regex field=signal \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n| json field=signal \"id\",\"name\",\"severity\",\"summary\",\"description\",\"ruleId\",\"ruleName\",\"tags\",\"suppressedReasons\",\"created\",\"entityId\" nodrop\n\n// squshdown\n| count by created,insightid,id,name,severity,summary,description,ruleid,rulename,tags,entityid | fields -_count \n// final aggregation to save to a lookup with only one row for most recent status of insight\n| concat(ruleid,\":\",rulename) as rule\n| avg(severity) as sev, count_distinct(insightid) as insights,values(entityid) as entities, count_distinct(id) as signals by rule  //,first(signals) as signals,\n| sort rule asc\n| sev * signals as total_sev",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "entity",
                            "displayName": "entity",
                            "defaultValue": "12345",
                            "sourceDefinition": {
                                "variableSourceType": "LogQueryVariableSourceDefinition",
                                "query": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n| json field=_raw \"insight.entityValue\" as entity\n| count by entity | sort entity asc\n",
                                "field": "entity"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Insights",
            "description": "",
            "children": [
                {
                    "type": "FolderSyncDefinition",
                    "name": "Demo Searches",
                    "description": "",
                    "children": [
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Insight Created Demo Search",
                            "search": {
                                "queryText": "_index=sumologic_system_events _sourcecategory=cseinsight insightcreated\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| \"unassigned\" as assignee \n| status as resolution \n\n// in update events \n| status as updated_values \n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n| s as severity\n| if(s = 1,\"LOW\",\"OTHER\") as severity\n| if(s = 2,\"MEDIUM\",severity) as severity\n| if(s = 3,\"HIGH\",severity) as severity\n| if(s = 4,\"CRITICAL\",severity) as severity\n\n| count by _messagetime,id,insightid,eventName,status,name,entitytype,entityvalue,tags,severity,confidence,assignee,resolution,signals,updated_values,timeToResponse,timeToDetection,timeToRemediation ,s\n\n\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual",
                                "defaultTimeRange": "Last 7 Days"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Insight Updated Demo Search",
                            "search": {
                                "queryText": "_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n| json field=_raw \"to\" as new_values nodrop\n| json field=_raw \"from\" as old_values nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n| s as severity\n| if(s = 1,\"LOW\",\"OTHER\") as severity\n| if(s = 2,\"MEDIUM\",severity) as severity\n| if(s = 3,\"HIGH\",severity) as severity\n| if(s = 4,\"CRITICAL\",severity) as severity\n\n| count by _messagetime,id,insightid,eventName,status,name,entitytype,entityvalue,tags,severity,confidence,assignee,resolution,signals,timeToResponse,timeToDetection,timeToRemediation ,old_values,new_values,s\n\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual",
                                "defaultTimeRange": "Last 30 Days"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Insights - Work Hours Response Table By Highest Remediation Time",
                            "search": {
                                "queryText": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd HH:mm:ss ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /Sat|Sun/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= 7 and num(created_hour) < 19),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n| avg(timeToDetection) as timeToDetection, avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation by insightid,working_hours,closed_by,created_local_time,resolution,severity,confidence,created_day,created_hour | sort timetoRemediation\n\n\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "AutoParse",
                                "defaultTimeRange": "-7d"
                            },
                            "searchSchedule": null,
                            "description": "Produces a tablular list of key insight fields for closed insights showing how to split reporting by on and off work hour schedule."
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Insights - explode embedded signals,rules and tags",
                            "search": {
                                "queryText": "// this query unpacks the signals and tags so we we get 1 event row per child signal, unpacks its tags and with a linkage in the event to the parent insight fields.\n(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n\n// severity used to be numeric but now it's not\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n| s as severity\n| if(s = 1,\"LOW\",\"OTHER\") as severity\n| if(s = 2,\"MEDIUM\",severity) as severity\n| if(s = 3,\"HIGH\",severity) as severity\n| if(s = 4,\"CRITICAL\",severity) as severity\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(s) as max_sev,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue ,severity\n\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| json field=signal \"tags\" as signal_tags\n| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n//\n//| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n//| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation by insightid,name,entitytype,entityvalue , signal, tagname,tagvalue\n\n//| values(insightid) as insights, count_distinct(insightid) as insight_count, values(entityvalue) as entities,count_distinct(entityvalue) as entity_count,first(status) as status, avg(confidence) as confidence by tagname, tagvalue, signal\n\n| json field=signal \"name\" as signal_name\n| json field=signal \"severity\" as signal_severity\n| json field=signal \"ruleId\" as ruleid\n| json field=signal \"ruleName\" as rulename\n\n| max(max_sev) as max_insight_sev,max(_messagetime) as _messagetime,avg(confidence) as confidence by signal_name, signal_severity,ruleid,rulename,tagname,tagvalue,insightid,entityvalue\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "AutoParse",
                                "defaultTimeRange": "Last 24 Hours"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Last Status Per Insight",
                            "search": {
                                "queryText": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n| json field=_raw \"to\" as updates nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm:ss\") as time\n// ensure we only store the most recent result\n| count by time,insightid,name,eventname,entitytype,entityvalue,status,severity,confidence,assignee,resolution,updates,_messagetime\n| sort _messagetime\n| first(status) as status,first(time) as time,first(assignee) as assignee by insightid,name,eventname,entitytype,entityvalue,status,severity,confidence | sort insightid\n\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "AutoParse",
                                "defaultTimeRange": "Last 7 Days"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Top 25 Highest Severity and Confidence Score",
                            "search": {
                                "queryText": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| values(rule) as rules,max(_messagetime) as time,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(eventnames) as eventnames by insightid,name,entitytype,entityvalue //,first(signals) as signals,\n| formatdate(tolong(time),\"yyyy-MM-dd\") as date\n| severity as s\n| \"OTHER\" as severity\n| if (s=1,\"1-LOW\", severity) as severity\n| if (s=2,\"2-MEDIUM\", severity) as severity\n| if (s=3,\"3-HIGH\", severity) as severity\n| count by date,insightid,confidence,severity,name,status,resolution,entityvalue,assignee //,timeToDetection,timeToRemediation,timeToResponse\n| sort severity,confidence | limit 25\n//| round(timeToResponse) as timeToResponse //| round(timeToDetection) as timeToDetection | round(timeToRemediation) as timeToRemediation\n| fields -_count",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "AutoParse",
                                "defaultTimeRange": "Last 24 Hours"
                            },
                            "searchSchedule": null,
                            "description": ""
                        }
                    ]
                },
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "Insights - Working Hours Response KPI",
                    "description": "",
                    "title": "Insights - Working Hours Response KPI",
                    "theme": "Light",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-1w"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panelB767EDB385606940",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":30}"
                            },
                            {
                                "key": "panelB27A5880A5433A42",
                                "structure": "{\"height\":10,\"width\":12,\"x\":0,\"y\":4}"
                            },
                            {
                                "key": "panelA1D37A3D96D83B4A",
                                "structure": "{\"height\":10,\"width\":12,\"x\":12,\"y\":4}"
                            },
                            {
                                "key": "panelPANE-CC25F047A9FA7949",
                                "structure": "{\"height\":4,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel13AE1EA7969F5946",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":14}"
                            },
                            {
                                "key": "panel6224C33E84BC884B",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":22}"
                            },
                            {
                                "key": "panel78773D2FB5C4594D",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":14}"
                            },
                            {
                                "key": "panel7AD46FDD876A5848",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":22}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panelB767EDB385606940",
                            "title": "Insights - By Highest Remediation Time",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\",\"decimals\":0},\"series\":{}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd HH:mm:ss ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n| avg(timeToDetection) as timeToDetection, avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation by insightid,working_hours,closed_by,created_local_time,resolution,severity,confidence,created_day,created_hour | sort timetoRemediation\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB27A5880A5433A42",
                            "title": "Response Times By Band",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"default\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"{{shift_timezone}}\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n\n| toLong(created_epoc) as _messagetime\n| timeslice 1d\n// avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation \n| avg(timeToResponse) as timeToResponse by working_hours, _timeslice \n| transpose row _timeslice column working_hours\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelA1D37A3D96D83B4A",
                            "title": "Remediation Times By  Band",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"default\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n\n| toLong(created_epoc) as _messagetime\n| timeslice 1d\n// avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation \n| avg(timeToRemediation) as timeToRemediation by working_hours, _timeslice \n| transpose row _timeslice column working_hours\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelPANE-CC25F047A9FA7949",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "This dashboard can be used to measure remediation times in and outside of defined working hours. Note values for timeToXXX are displayed in minutes.\n\nInsight events record times in UTC. Make sure to set your correct default values in the local time zone for the filter parameters for:\n- shift TZ. This is the TZ value we convert UTC times to first before evaluating the inside or outside work days or hours of the day.\n- workday start hour and end hour (number between 0 and 23)\n- regular expression to define 'weekend' days where any hour is 'outside' working hours.\n\nShift hour evaluation formula:\n```\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n```"
                        },
                        {
                            "id": null,
                            "key": "panel13AE1EA7969F5946",
                            "title": "Response Distribution Inside Hours",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"Hour Local Time\"},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"timeToResponse\",\"minimum\":0},\"axisY2\":{\"title\":\"Hour Local Time\"}},\"series\":{},\"general\":{\"type\":\"scatter\",\"displayType\":\"default\",\"markerSize\":8,\"markerType\":\"circle\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"xy\":{\"xDimension\":[],\"yDimension\":[]},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n\n| toLong(created_epoc) as _messagetime\n| timeslice 1d\n// avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation \n| where working_hours = \"inside\"\n| avg(timeToResponse) as timeToResponse by insightid,created_hour,created_day,working_hours\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel6224C33E84BC884B",
                            "title": "Remediation Distribution Inside Hours",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"Hour Local Time\"},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"timeToRemediation\",\"minimum\":0}},\"series\":{},\"general\":{\"type\":\"scatter\",\"displayType\":\"default\",\"markerSize\":8,\"markerType\":\"circle\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"xy\":{\"xDimension\":[],\"yDimension\":[]},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n\n| toLong(created_epoc) as _messagetime\n| timeslice 1d\n// avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation \n| where working_hours = \"inside\"\n| avg(timeToRemediation) as timeToRemediation by created_day,created_hour, working_hours, insightid\n\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel78773D2FB5C4594D",
                            "title": "Response Distribution Outside Hours",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"Hour Local Time\"},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"timeToResponse\",\"minimum\":0}},\"series\":{},\"general\":{\"type\":\"scatter\",\"displayType\":\"default\",\"markerSize\":8,\"markerType\":\"circle\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"xy\":{\"xDimension\":[],\"yDimension\":[]},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n\n| toLong(created_epoc) as _messagetime\n| timeslice 1d\n// avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation \n| where working_hours = \"outside\"\n| avg(timeToResponse) as timeToResponse by insightid,created_hour ,created_day,working_hours\n\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel7AD46FDD876A5848",
                            "title": "Remediation Distribution Outside Hours",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"Hour Local Time\"},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"timeToRemediation\",\"minimum\":0}},\"series\":{},\"general\":{\"type\":\"scatter\",\"displayType\":\"default\",\"markerSize\":8,\"markerType\":\"circle\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"xy\":{\"xDimension\":[],\"yDimension\":[]},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "// This query demonstrates how to work with closed insights to produce a useful table with status, times and operators.\n\n_index=sumologic_audit_events _sourcecategory=cseinsight closed insightupdated\n//OR\n//_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation) as timeToRemediation\n\n//| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n//| json field=signal \"tags\" as signal_tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n////\n| json field=_raw \"insight.closed\" as time_closed nodrop\n|substring(time_closed,0,23) as time_closed\n\n| json field=_raw \"insight.created\" as time_created nodrop\n|substring(time_created,0,23) as time_created\n\n\n| json field=_raw \"operator.sourceIp\" as op_ip nodrop\n| json field=_raw \"operator.email\" as op_email nodrop\n| sort _messagetime\n//// ensure we only store the most recent result and remove duplicate exploded events\n| count as events, max(_messagetime) as _messagetime,first(status) as status, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation, first(op_ip) as closed_ip,first(op_email) as closed_by,first(time_created) as time_created,first(time_closed) as time_closed by insightid,name,entitytype,entityvalue \n\n| where status = \"closed\"\n| parsedate(time_created,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as created_epoc\n\n// timeToResponse = seconds between created time and first status update\n// timeToRemediation = seconds between created and closed epoc times in the close event\n\n// this would give you the save number as timeToRemediation already has\n// | parsedate(time_closed,\"yyyy-MM-dd'T'HH:mm:ss.SSS\") as closed_epoc\n// | (closed_epoc - created_epoc) / 1000 as duration_s\n\n// set your time you want to measure start and end shift times here\n| \"Pacific/Auckland\" as shift_TZ\n| formatDate(toLong(created_epoc), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as created_local_time\n| formatDate(toLong(created_epoc ), \"E\", shift_TZ) as created_day\n| formatDate(toLong(created_epoc ), \"HH\", shift_TZ) as created_hour\n\n| formatDate(toLong(created_epoc + timeToRemediation), \"yyyy-MM-dd'T'HH:mm:ss.SSS ZZZ\", shift_TZ) as closed_local_time\n| formatDate(toLong(created_epoc + timeToRemediation), \"E\", shift_TZ) as closed_day\n| formatDate(toLong(created_epoc + timeToRemediation), \"HH\", shift_TZ) as closed_hour\n\n// enter shift rules here \n| if(created_day matches /{{{weekend_days}}}/,\"weekend\",\"weekday\") as weekday\n| if(weekday = \"weekday\" and (num(created_hour) >= {{workday_starts_hour}} and num(created_hour) < {{workday_ends_hour}}),\"inside\",\"outside\") as working_hours\n\n// from here you could report on them as bands for example:\n| timeToRemediation - timetoresponse as timeToRemediation\n\n// reporting in minutes is easier for humans\n| timeToDetection / 60 as timeToDetection\n| timeToResponse / 60 as timeToResponse\n| timeToRemediation / 60 as timeToRemediation\n\n| toLong(created_epoc) as _messagetime\n| timeslice 1d\n// avg(timeToResponse) as timeToResponse, avg(timeToRemediation) as timeToRemediation \n| where working_hours = \"outside\"\n| avg(timeToRemediation) as timeToRemediation by  insightid,created_hour,created_day,working_hours\n\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "shift_timezone",
                            "displayName": "shift_timezone",
                            "defaultValue": "Pacific/Auckland",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "Pacific/Auckland"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": false,
                            "hideFromUI": false,
                            "valueType": "Any"
                        },
                        {
                            "id": null,
                            "name": "workday_starts_hour",
                            "displayName": "workday_starts_hour",
                            "defaultValue": "7",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "7"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        },
                        {
                            "id": null,
                            "name": "workday_ends_hour",
                            "displayName": "workday_ends_hour",
                            "defaultValue": "19",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "19"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": false,
                            "hideFromUI": false,
                            "valueType": "Any"
                        },
                        {
                            "id": null,
                            "name": "weekend_days",
                            "displayName": "weekend_days",
                            "defaultValue": "Sat|Sun",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "Sat|Sun"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": false,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                },
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "Insights Console (audit events) - 20220830",
                    "description": "A dashboard to overview or explore CSE Insights using the sumologic_*_audit events (phase II).",
                    "title": "Insights Console (audit events) - 20220830",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-1w"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panelPANE-267EDE64859DB940",
                                "structure": "{\"height\":8,\"width\":24,\"x\":0,\"y\":89}"
                            },
                            {
                                "key": "panel5BAC8D8E88CC7B42",
                                "structure": "{\"height\":10,\"width\":6,\"x\":12,\"y\":38}"
                            },
                            {
                                "key": "panel836450E7B5CE8947",
                                "structure": "{\"height\":9,\"width\":14,\"x\":0,\"y\":20}"
                            },
                            {
                                "key": "panel4EE161758C819A4F",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":48}"
                            },
                            {
                                "key": "panelPANE-192FD1AEAB085A45",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":3}"
                            },
                            {
                                "key": "panel73C2C21E9A8BFA46",
                                "structure": "{\"height\":10,\"width\":6,\"x\":0,\"y\":38}"
                            },
                            {
                                "key": "panel195AE83F9DE96943",
                                "structure": "{\"height\":3,\"width\":10,\"x\":14,\"y\":23}"
                            },
                            {
                                "key": "panel7B5950409FCD5943",
                                "structure": "{\"height\":3,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel9E8CE011A6160845",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":4}"
                            },
                            {
                                "key": "panel2F304186AE98F847",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":4}"
                            },
                            {
                                "key": "panel63AE3EB18F63FB49",
                                "structure": "{\"height\":10,\"width\":6,\"x\":18,\"y\":38}"
                            },
                            {
                                "key": "panelF2C0AC59A4C64941",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":105}"
                            },
                            {
                                "key": "panel8784A5D5A04E6A45",
                                "structure": "{\"height\":7,\"width\":24,\"x\":0,\"y\":106}"
                            },
                            {
                                "key": "panelA5DFAC35A908A847",
                                "structure": "{\"height\":10,\"width\":12,\"x\":0,\"y\":79}"
                            },
                            {
                                "key": "panel8AA139A292606A4B",
                                "structure": "{\"height\":10,\"width\":12,\"x\":12,\"y\":79}"
                            },
                            {
                                "key": "panelE8D194C182C52A43",
                                "structure": "{\"height\":3,\"width\":10,\"x\":14,\"y\":20}"
                            },
                            {
                                "key": "panel64736A5FA8B06845",
                                "structure": "{\"height\":3,\"width\":10,\"x\":14,\"y\":26}"
                            },
                            {
                                "key": "panel7E827B10AC561841",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":68}"
                            },
                            {
                                "key": "panelF978D2629106484A",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":58}"
                            },
                            {
                                "key": "panel9C4EF1238C34CB4D",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":78}"
                            },
                            {
                                "key": "panel3BF28BAA8CF58B46",
                                "structure": "{\"height\":8,\"width\":24,\"x\":0,\"y\":97}"
                            },
                            {
                                "key": "panel1C1DDC33B83AE845",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":12}"
                            },
                            {
                                "key": "panel3100301ABF18084D",
                                "structure": "{\"height\":10,\"width\":6,\"x\":6,\"y\":38}"
                            },
                            {
                                "key": "panelF81EAFF5AC963A4B",
                                "structure": "{\"height\":9,\"width\":24,\"x\":0,\"y\":29}"
                            },
                            {
                                "key": "panel6E6324F185A28947",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":12}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panelPANE-267EDE64859DB940",
                            "title": "Insights vs Signals Mapping",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":2},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| json field=signal \"tags\" as signal_tags\n| parse regex field=signal_tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n// use this to explode tags\n//| parse regex field=signal_tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n\n| json field=signal \"id\" as signal_id\n| json field=signal \"name\" as signal_name\n| json field=signal \"severity\" as signal_severity\n| json field=signal \"ruleId\" as ruleid\n| json field=signal \"ruleName\" as rulename\n// final aggregation to save to a lookup with only one row for most recent status of insight\n|  values(signal_name) as signals,values(tag) as tags,values(rule) as rules by insightid,name,entityvalue //,first(signals) as signals,\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel5BAC8D8E88CC7B42",
                            "title": "Closed By",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"labelFontSize\":11,\"titleFontSize\":0,\"labelWrap\":false,\"labelMaxWidth\":250},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":true},\"general\":{\"type\":\"bar\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n| where status=\"closed\"\n//|  severity as s\n//| \"OTHER\" as severity\n//| if (s=1,\"1-LOW\", severity) as severity\n//| if (s=2,\"2-MEDIUM\", severity) as severity\n//| if (s=3,\"3-HIGH\", severity) as severity\n| count by assignee,resolution | transpose row assignee column resolution",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel836450E7B5CE8947",
                            "title": "Highest Severity Entities",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// severity used to be numeric but now it's not\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// severity used to be numeric but for a while it wasn't so covering bases here\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|HIGH/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|LOW/,3,s) as s\n| s as severity\n| if(s = 1,\"1. HIGH\",\"OTHER\") as severity\n| if(s = 2,\"2. MEDIUM\",severity) as severity\n| if(s = 3,\"3. LOW\",severity) as severity\n| if(s = 0,\"0. OTHER\",severity) as severity\n\n// ensure we only store the most recent result\n|  max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, min(s) as sev,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue ,severity\n| if (resolution = \"False Positive\",1,0) as fp\n| if(resolution = \"No Action\", 1, 0) as na\n| 4 - sev as true_s\n| sum(true_s) as sev_score,values(severity) as severities,values(insightid) as insight,count_distinct(insightid) as insights,sum(fp) as false_positive,sum(na) as no_action,avg(confidence) as avg_conf by entityvalue \n| sort sev_score,insights ,avg_conf | avg_conf * 100 as avg_conf",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel4EE161758C819A4F",
                            "title": "Top 25 Highest Severity and Confidence Score",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// severity used to be numeric but for a while it wasn't so covering bases here\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|HIGH/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|LOW/,3,s) as s\n| s as severity\n| if(s = 1,\"1. HIGH\",\"OTHER\") as severity\n| if(s = 2,\"2. MEDIUM\",severity) as severity\n| if(s = 3,\"3. LOW\",severity) as severity\n| if(s = 0,\"0. OTHER\",severity) as severity\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, min(s) as max_sev,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue ,severity\n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| values(rule) as rules,max(_messagetime) as time,first(status) as status,first(tags) as tags, min(max_sev) as worst_sev,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(eventnames) as eventnames by insightid,name,entitytype,entityvalue,severity //,first(signals) as signals,\n| formatdate(tolong(time),\"yyyy-MM-dd\") as date\n\n\n\n| count by date,insightid,confidence,severity,name,status,resolution,entityvalue,assignee,worst_sev //,timeToDetection,timeToRemediation,timeToResponse\n| sort worst_sev asc,confidence | limit 25\n//| round(timeToResponse) as timeToResponse //| round(timeToDetection) as timeToDetection | round(timeToRemediation) as timeToRemediation\n| fields -_count",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelPANE-192FD1AEAB085A45",
                            "title": "A. Insight Events Overview Params: keywords: {{keywords}} timeslice: {{graph_by_timeslice}}",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel73C2C21E9A8BFA46",
                            "title": "Latest Status Event Per Insight",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":0,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":true},\"general\":{\"type\":\"bar\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// severity used to be numeric but for a while it wasn't so covering bases here\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|HIGH/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|LOW/,3,s) as s\n| s as severity\n| if(s = 1,\"1. HIGH\",\"OTHER\") as severity\n| if(s = 2,\"2. MEDIUM\",severity) as severity\n| if(s = 3,\"3. LOW\",severity) as severity\n| if(s = 0,\"0. OTHER\",severity) as severity\n\n| count_distinct(insightid) by status,severity | transpose row status column severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel195AE83F9DE96943",
                            "title": "Time To Response",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"labelFontSize\":11,\"titleFontSize\":11},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"minimum\":0}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":2}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| where status=\"closed\"\n//| timeslice by 1d\n| timeToResponse as t\n | where t >0\n| sort t\n| min(t) as fastest,pct(t,50) as median,max(t) as slowest ,last(insightid) as worst\n//| as _t_pct_1,median,pct75,pct100 //as timeToResponse, avg(timeToDetection) as timeToDetection, avg(timeToRemediation) as timeToRemediation // as by _timeslice",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel7B5950409FCD5943",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "This dashboard displays Cloud SIEM Enterprise Insight audit events from the ```sumologic_*_events``` audit indexes for Insights created or updated.\n\nYou can filter the output using the **keywords** parameter: * for all values,  or one or more keywords such as: ```TA1234```  insights with string TA134, ```log*```  login, logout etc,```laptop123 brute```  laptop123 and brute. \n"
                        },
                        {
                            "id": null,
                            "key": "panel9E8CE011A6160845",
                            "title": "Insights Closed By Time and Severity",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\nclosed\n\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n| timeslice by {{graph_by_timeslice}}\n\n// severity used to be numeric but for a while it wasn't so covering bases here\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|HIGH/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|LOW/,3,s) as s\n| s as severity\n| if(s = 1,\"1. HIGH\",\"OTHER\") as severity\n| if(s = 2,\"2. MEDIUM\",severity) as severity\n| if(s = 3,\"3. LOW\",severity) as severity\n| if(s = 0,\"0. OTHER\",severity) as severity\n\n// ensure we only store the most recent result\n| count as events,first(status) as status,first(tags) as tags, max(s) as max_sev,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue ,_timeslice,severity\n\n//// lets squash down size of the signals field so we don't generate a massive lookup\n//| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n//| replace (rule,\"\\\"\",\"\") as rule\n//| replace (rule,\"ruleName\",\"\") as rule\n//\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| where status=\"closed\"\n\n\n| first(status) as status, max(max_sev) as max_sev,avg(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(eventnames) as eventnames by insightid,name,entitytype,entityvalue,_timeslice,severity //,first(signals) as signals,\n\n| count by _timeslice,severity\n\n// ensure we only store the most recent result\n | transpose row _timeslice column severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel2F304186AE98F847",
                            "title": "Insights New Events By Time and Severity",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "//(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\n//OR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated //)\n\n{{{keywords}}}\n\nnew\n\n//| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n//| json field=_raw \"insight.name\" as name\n//| json field=_raw \"insight.entityType\" as entitytype\n//| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n//| json field=_raw \"insight.confidence\" as confidence\n//| json field=_raw \"insight.signals\" as signals\n\n| timeslice by {{graph_by_timeslice}}\n//// lets squash down size of the signals field so we don't generate a massive lookup\n//| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n//| replace (rule,\"\\\"\",\"\") as rule\n//| replace (rule,\"ruleName\",\"\") as rule\n//\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| where status=\"new\"\n\n//| severity as s\n//| \"OTHER\" as severity\n//| if (s=\"1\" or s = \"LOW\",\"1-LOW\", severity) as severity\n//| if (s=\"2\" or s = \"MEDIUM\",\"2-MEDIUM\", severity) as severity\n//| if (s=\"3\" or s = \"HIGH\",\"3-HIGH\", severity) as severity\n//\n| count by _timeslice,severity\n\n// ensure we only store the most recent result\n | transpose row _timeslice column severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel63AE3EB18F63FB49",
                            "title": "Inisght Events By Type",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.severity\" as severity\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n| count as events by insightid,name,entitytype,entityvalue,eventname ,status,_messagetime,severity\n| tolong(_messagetime) as _messagetime\n| timeslice by {{graph_by_timeslice}}\n//| severity as s\n//| \"OTHER\" as severity\n//| if (s=1,\"1-LOW\", severity) as severity\n//| if (s=2,\"2-MEDIUM\", severity) as severity\n//| if (s=3,\"3-HIGH\", severity) as severity\n| concat (eventname,\":\",status) as event\n| sum(events) as events by _timeslice,event | transpose row _timeslice column event\n\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelF2C0AC59A4C64941",
                            "title": "C. Signals and Rules In Insights",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel8784A5D5A04E6A45",
                            "title": "Rules Vs Insights Mappings",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| parse regex field=signals \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n\n| json field=signal \"id\" as signal_id\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| avg(severity) as severity,count_distinct(signal_id) as signals,count_distinct(insightid) as insight_count,values(tag) as tags,values(insightid) as insights,count_distinct(entityvalue) as entity_count by rule   //,first(signals) as signals,\n//| count_distinct(signal_id) as signals,values(insightid) as insights, count_distinct(insightid) as insight_count, values(tags) as tags,values(entityvalue) as entities,count_distinct(entityvalue) as entity_count by rule,signal_severity\n| sort rule asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelA5DFAC35A908A847",
                            "title": "Triggered Rules",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\",\\\"\",\" \") as rule\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| parse regex field=signals \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n| json field=signal \"id\" as signal_id\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| avg(severity) as sev, count_distinct(insightid) as insights,count_distinct(entityvalue) as entities, count_distinct(signal_id) as signals by rule  //,first(signals) as signals,\n| sort rule asc\n| sev * signals as total_sev",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel8AA139A292606A4B",
                            "title": "Triggered Tags",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\",\\\"\",\" \") as rule\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| parse regex field=signals \"\\\"severity\\\":\\\"(?<severity>[0-9]+)\" \n| json field=signal \"id\" as signal_id\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| avg(severity) as sev, count_distinct(insightid) as insights,count_distinct(entityvalue) as entities, count_distinct(signal_id) as signals by tag  //,first(signals) as signals,\n| sort tag asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelE8D194C182C52A43",
                            "title": "Time To Detection",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"labelFontSize\":11,\"titleFontSize\":11},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"minimum\":0}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":2}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| where status=\"closed\"\n//| timeslice by 1d\n| timeToDetection as t\n | where t >0\n| sort t\n| min(t) as fastest,pct(t,50) as median,max(t) as slowest ,last(insightid) as worst\n//| as _t_pct_1,median,pct75,pct100 //as timeToResponse, avg(timeToDetection) as timeToDetection, avg(timeToRemediation) as timeToRemediation // as by _timeslice",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel64736A5FA8B06845",
                            "title": "Time To Remediation",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"labelFontSize\":11,\"titleFontSize\":11},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"minimum\":0}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":2}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| where status=\"closed\"\n//| timeslice by 1d\n| timeToRemediation as t\n | where t >0\n| sort t\n| min(t) as fastest,pct(t,50) as median,max(t) as slowest ,last(insightid) as worst\n//| as _t_pct_1,median,pct75,pct100 //as timeToResponse, avg(timeToDetection) as timeToDetection, avg(timeToRemediation) as timeToRemediation // as by _timeslice",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel7E827B10AC561841",
                            "title": "Event History",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n| json field=_raw \"to\" as updates nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm:ss\") as time\n// ensure we only store the most recent result\n| count by time,insightid,name,eventname,entitytype,entityvalue,status,severity,confidence,assignee,resolution,_messagetime\n| sort _messagetime | fields -_count\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelF978D2629106484A",
                            "title": "Last Status Per Insight",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n| json field=_raw \"to\" as updates nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n| formatdate(tolong(_messagetime),\"yyyy-MM-dd HH:mm:ss\") as time\n// ensure we only store the most recent result\n| count by time,insightid,name,eventname,entitytype,entityvalue,status,severity,confidence,assignee,resolution,updates,_messagetime\n| sort _messagetime\n| first(status) as status,first(time) as time,first(assignee) as assignee by insightid,name,eventname,entitytype,entityvalue,status,resolution,severity,confidence | sort insightid\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel9C4EF1238C34CB4D",
                            "title": "B. Mappings and Tags",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel3BF28BAA8CF58B46",
                            "title": "Entities To Insights, Rules and Tags",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":2},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, min(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// lets squash down size of the signals field so we don't generate a massive lookup\n| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n| replace (rule,\"\\\"\",\"\") as rule\n| replace (rule,\"ruleName\",\"\") as rule\n\n| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| values(insightid) as insights,values(tag) as tags,values(rule) as rules by entityvalue \n| sort entityvalue asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel1C1DDC33B83AE845",
                            "title": "New insights vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"overrides\":[],\"general\":{\"type\":\"column\",\"displayType\":\"default\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "//(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\n//OR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated //)\n\n{{{keywords}}}\n\n//| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n//| json field=_raw \"insight.name\" as name\n//| json field=_raw \"insight.entityType\" as entitytype\n//| json field=_raw \"insight.entityValue\" as entityvalue\n//| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n//| json field=_raw \"insight.confidence\" as confidence\n//| json field=_raw \"insight.signals\" as signals\n\n| timeslice by {{graph_by_timeslice}}\n// ensure we only store the most recent result\n// severity used to be numeric but now it's not\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|LOW/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|HIGH/,3,s) as s\n| if (sev_string matches /4|CRITICAL/,4,s) as s\n| s as severity\n| if(s = 1,\"LOW\",\"OTHER\") as severity\n| if(s = 2,\"MEDIUM\",severity) as severity\n| if(s = 3,\"HIGH\",severity) as severity\n| if(s = 4,\"CRITICAL\",severity) as severity\n\n| sum(s) as total_severity,count by _timeslice | compare with timeshift 7d\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel3100301ABF18084D",
                            "title": "Insight Resolution",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":0,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":true},\"general\":{\"type\":\"bar\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\nclosed \n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// severity used to be numeric but for a while it wasn't so covering bases here\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|HIGH/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|LOW/,3,s) as s\n| s as severity\n| if(s = 1,\"1. HIGH\",\"OTHER\") as severity\n| if(s = 2,\"2. MEDIUM\",severity) as severity\n| if(s = 3,\"3. LOW\",severity) as severity\n| if(s = 0,\"0. OTHER\",severity) as severity\n\n| count_distinct(insightid) by resolution,severity | transpose row resolution column severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelF81EAFF5AC963A4B",
                            "title": "Mitre Techniques In Insights Map",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\n| json field=_raw \"eventName\"\n//| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n\n// ensure we only store the most recent result\n| count as events, max(_messagetime) as _messagetime,first(status) as status,first(tags) as tags, max(severity) as severity,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue \n\n// explode signals array embedded in insight to get individual severities and tags\n//| parse regex field=tags \"\\\"(?<tag>[^\\\":,]+:[^\\\",:]+)\\\"\" multi\n| parse regex field=signals \"(?<signal>\\{\\\"id\\\":\\\"[^\\}]+\\})\" multi\n| json field=signal \"id\" as s_id\n| json field=signal \"tags\" as signaltags\n| parse regex field=signaltags \"\\\"(?<s_tag>[^\\\"\\:]+):(?<s_value>[^\\\"]+)\" multi\n| parse regex field=tags \"_mitreAttackTactic:(?<tactic>[^\\\":\\r\\n]+)\" multi\n| parse regex field=tags \"_mitreAttackTechnique:(?<technique>[^\\\":\\r\\n]+)\" multi\n| parse regex field=signals \"\\\"severity\\\":\\\"(?<s_severity>[0-9]+)\" \n\n| \"\" as stage\n| if(tactic = \"TA0043\",\"a.Reconnaissance\",stage) as stage\n| if(tactic = \"TA0042\",\"b.Resource Development\",stage) as stage\n| if(tactic = \"TA0001\",\"c.Initial Access\",stage) as stage\n| if(tactic = \"TA0002\",\"d.Execution\",stage) as stage\n| if(tactic = \"TA0003\",\"e.Persistence\",stage) as stage\n| if(tactic = \"TA0004\",\"f.Privilege Escalation\",stage) as stage\n| if(tactic = \"TA0005\",\"g.Defense Evasion\",stage) as stage\n| if(tactic = \"TA0006\",\"h.Credential Access\",stage) as stage\n| if(tactic = \"TA0007\",\"i.Discovery\",stage) as stage\n| if(tactic = \"TA0008\",\"j.Lateral Movement\",stage) as stage\n| if(tactic = \"TA0009\",\"k.Collection\",stage) as stage\n| if(tactic = \"TA0011\",\"l.Command and Control\",stage) as stage\n| if(tactic = \"TA0010\",\"m.Exfiltration\",stage) as stage\n| if(tactic = \"TA0040\",\"n.Impact\",stage) as stage\n\n//|max(_messagetime) as _messagetime,first(status) as status,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution by insightid,name,entitytype,entityvalue,s_id,s_severity,s_tag,s_value, stage, tactic,technique\n//\n\n\n\n// unique signals per stage and technique\n//| count_distinct(s_id) as signals by stage,technique\n//| transpose row technique column stage\n//\n// unique insights per stage and technique \n//| count_distinct(insightid) as insights by stage,technique\n//| transpose row technique column stage\n\n// techniques per stage\n| count by insightid,s_id,stage,technique,entitytype,entityvalue\n//| concat(\"https://attack.mitre.org/techniques/\",replace (technique,\".\",\"/\")) as mitre_url\n| sort stage asc, technique asc\n| now() as _messagetime\n| transactionize stage (merge stage takeFirst,technique takeDistinct)\n//| values (technique)  as techniques by stage\n| 1 as r\n| max(r) as r by stage,technique  \n| values(technique) as techniques by stage,r\n| transpose row r column stage | fields -r",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel6E6324F185A28947",
                            "title": "Insights Closed By Resolution",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "(_index=sumologic_audit_events _sourcecategory=cseinsight insightupdated\nOR\n_index=sumologic_system_events _sourcecategory=cseinsight insightcreated)\n\n{{{keywords}}}\n\nclosed\n\n| json field=_raw \"eventName\"\n| json field=_raw \"insightIdentity.id\" as id\n| json field=_raw \"insightIdentity.readableId\" as insightid\n| json field=_raw \"insight.status\" as status\n| json field=_raw \"insight.name\" as name\n| json field=_raw \"insight.entityType\" as entitytype\n| json field=_raw \"insight.entityValue\" as entityvalue\n| json field=_raw \"insight.tags\" as tags\n| json field=_raw \"insight.severity\" as severity\n| json field=_raw \"insight.confidence\" as confidence\n| json field=_raw \"insight.signals\" as signals\n\n// in closed events\n| json field=_raw \"insight.assignee\" as assignee nodrop\n| json field=_raw \"insight.resolution\" as resolution nodrop\n\n// in update events \n//| json field=_raw \"to\" as last_change nodrop\n\n// may exist after an update\n| json field=_raw \"insight.timeToResponse\" as timeToResponse nodrop\n| json field=_raw \"insight.timeToDetection\" as timeToDetection nodrop\n| json field=_raw \"insight.timeToRemediation\" as timeToRemediation nodrop\n\n| if (isnull(timeToResponse),-1,timeToResponse/3600) as timeToResponse\n| if (isnull(timeToDetection),-1,timeToDetection/3600) as timeToDetection\n| if (isnull(timeToRemediation),-1,timeToRemediation/3600) as timeToRemediation\n| sort _messagetime\n| timeslice by {{graph_by_timeslice}}\n\n// severity used to be numeric but for a while it wasn't so covering bases here\n| tostring(severity) as sev_string\n| 0 as s\n| if (sev_string matches /1|HIGH/,1,s) as s\n| if (sev_string matches /2|MEDIUM/,2,s) as s\n| if (sev_string matches /3|LOW/,3,s) as s\n| s as severity\n| if(s = 1,\"1. HIGH\",\"OTHER\") as severity\n| if(s = 2,\"2. MEDIUM\",severity) as severity\n| if(s = 3,\"3. LOW\",severity) as severity\n| if(s = 0,\"0. OTHER\",severity) as severity\n\n// ensure we only store the most recent result\n| count as events,first(status) as status,first(tags) as tags, max(s) as max_sev,first(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(signals) as signals,values(eventname) as eventnames by insightid,name,entitytype,entityvalue ,_timeslice,severity\n\n//// lets squash down size of the signals field so we don't generate a massive lookup\n//| parse regex field=signals \"\\\"ruleId\\\":\\\"(?<rule>[^\\\"]+\\\",\\\"ruleName\\\":\\\"[^\\\"]+\\\")\" multi\n//| replace (rule,\"\\\"\",\"\") as rule\n//| replace (rule,\"ruleName\",\"\") as rule\n//\n// final aggregation to save to a lookup with only one row for most recent status of insight\n| where status=\"closed\"\n\n\n| first(status) as status, max(max_sev) as max_sev,avg(confidence) as confidence,first(assignee) as assignee,first(resolution) as resolution,first(timeToResponse) as timeToResponse,first(timeToDetection) as timeToDetection,first(timeToRemediation) as timeToRemediation,first(eventnames) as eventnames by insightid,name,entitytype,entityvalue,_timeslice,severity //,first(signals) as signals,\n\n| count by _timeslice,resolution\n\n// ensure we only store the most recent result\n | transpose row _timeslice column resolution",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "keywords",
                            "displayName": "keywords",
                            "defaultValue": "*",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "insight-1234,username,inprogress,closed,entityabc,T1078.001"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        },
                        {
                            "id": null,
                            "name": "graph_by_timeslice",
                            "displayName": "graph_by_timeslice",
                            "defaultValue": "1d",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "15m,1h,3h,1d,1w"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": false,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Records",
            "description": "",
            "children": [
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "CSIEM Failed To Map",
                    "description": "",
                    "title": "CSIEM Failed To Map",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-1d"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panel123163CF998B794A",
                                "structure": "{\"height\":8,\"width\":8,\"x\":0,\"y\":24}"
                            },
                            {
                                "key": "panel477ACF848F558840",
                                "structure": "{\"height\":8,\"width\":8,\"x\":8,\"y\":24}"
                            },
                            {
                                "key": "panel500734A3A4544B40",
                                "structure": "{\"height\":8,\"width\":8,\"x\":0,\"y\":16}"
                            },
                            {
                                "key": "panelA67AA8ED87ECFB45",
                                "structure": "{\"height\":8,\"width\":8,\"x\":8,\"y\":16}"
                            },
                            {
                                "key": "panel008F6C668615094D",
                                "structure": "{\"height\":8,\"width\":8,\"x\":16,\"y\":16}"
                            },
                            {
                                "key": "panel9729929189C28847",
                                "structure": "{\"height\":8,\"width\":8,\"x\":16,\"y\":24}"
                            },
                            {
                                "key": "panelF33C2015BA492949",
                                "structure": "{\"height\":9,\"width\":24,\"x\":0,\"y\":7}"
                            },
                            {
                                "key": "panel20C3CEBCA93A2A49",
                                "structure": "{\"height\":13,\"width\":24,\"x\":0,\"y\":40}"
                            },
                            {
                                "key": "panel749A6631B86F8A4E",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":32}"
                            },
                            {
                                "key": "panelPANE-2AD803DDB19C884A",
                                "structure": "{\"height\":7,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel7B79B920AFD63A4D",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":32}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panel123163CF998B794A",
                            "title": "Map Fail By Original Sourcecategory",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":9,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n| count by _timeslice, metadata_sourcecategory\n| transpose row _timeslice column metadata_sourcecategory\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel477ACF848F558840",
                            "title": "Map Fail By Metadata Vendor-Product",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":9,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n| concat(metadata_vendor,\"-\",metadata_product) as MP\n| count by _timeslice, MP\n| transpose row _timeslice column MP\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel500734A3A4544B40",
                            "title": "Map Fail By Original Sourcecategory",
                            "visualSettings": "{\"series\":{},\"general\":{\"type\":\"pie\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"mode\":\"distribution\"},\"legend\":{\"enabled\":true,\"fontSize\":9}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \nmetadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n\n| count by metadata_sourcecategory | sort _count\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelA67AA8ED87ECFB45",
                            "title": "Map Fail By Metadata Vendor-Product",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"pie\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"mode\":\"distribution\"},\"axes\":{\"axisX\":{\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"titleFontSize\":9,\"labelFontSize\":9}},\"series\":{},\"legend\":{\"enabled\":true,\"fontSize\":9}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n| concat(metadata_vendor,\"-\",metadata_product) as MP\n| count by  MP | sort _count\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel008F6C668615094D",
                            "title": "Map Fail By metadata_deviceeventid",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"pie\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"mode\":\"distribution\"},\"axes\":{\"axisX\":{\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"titleFontSize\":9,\"labelFontSize\":9}},\"series\":{},\"legend\":{\"enabled\":true,\"fontSize\":9}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \nmetadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n\n| count by  metadata_deviceeventid | sort _count\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel9729929189C28847",
                            "title": "Map Fail By metadata_deviceeventid",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":9,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n| count by _timeslice,metadata_deviceeventid\n| transpose row _timeslice column metadata_deviceeventid\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelF33C2015BA492949",
                            "title": "Table View",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"titleFontSize\":9,\"labelFontSize\":9}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| metadata_sourcecategory as sourcecategory\n| metadata_vendor as vendor\n| metadata_product as product\n| metadata_deviceeventid as eventid\n| metadata_parser as parser\n| count by sourcecategory,vendor,product,eventid,parser //,reason \n| sort _count\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel20C3CEBCA93A2A49",
                            "title": "Example Unmapped Events (limit 100)",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"titleFontSize\":9,\"labelFontSize\":9}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":11,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_sourcecategory={{sourcecategory}}\n// subquery will give us a sample set of 100 messageids for this same sourcecategory\n[subquery:\n_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| limit 100\n| count by _sourcecategory ,metadata_sourceCategory,metadata_sourceMessageId \n| metadata_sourceMessageId as _messageid\n| metadata_sourceCategory as _sourcecategory | count by _sourcecategory,_messageid | compose _sourcecategory,_messageid]\n| limit 100\n| concat(\"_sourcecategory=\",_sourcecategory,\"\\n _messageid=\",_messageid) as log_search\n| count by log_search,_raw ",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel749A6631B86F8A4E",
                            "title": "Map Fail By metadata_parser",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9,\"logarithmic\":true}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"right\",\"fontSize\":9,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n| count by _timeslice,metadata_parser\n| transpose row _timeslice column metadata_parser\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelPANE-2AD803DDB19C884A",
                            "title": "Help",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "CSE Log Mapping is part of the [record processing pipeline](https://help.sumologic.com/Cloud_SIEM_Enterprise/CSE_Schema/00_Record_Processing_Pipeline). Events are forwarded from CIP to CSE when they have a _siemforward=\"true\" field. To become a record these events must:\n- A. Match a [SumoLogic Integration config](https://help.sumologic.com/Cloud_SIEM_Enterprise/Integrations/Send_Data_from_Sumo_Logic_to_CSE) in administration / Integrations / Sumologic in CSE UI\n- B. Match a [structured log mapping](https://help.sumologic.com/Cloud_SIEM_Enterprise/CSE_Schema/Create_a_Structured_Log_Mapping) rule in Content / Log Mappings in CSE UI.\n\nEvery CIP event forwarded to CSE is reflected back to CIP as a normalised event stored in the sec_record_* index/view. If an event fails either of the steps above it will be routed to the **sec_record_failure** index with a 'failed to map' error in the **reason** field:\n- When it’s failed to map it usually wrong vendor,product,format, or events\n- When it’s failed to parse it usually means the mapper or grok is missing fields\n\nGenerally if an event is in sec_record_failue and has no metadata_vendor or product it's likely to have failed in Step A above. If it has a metadata_vendor, product and deviceeventid it likely failed to match one of the log mapping content rules (ie. step B). If the record has a *metadata_parser* it's likely a failure with step B above and may have a useful reason field.\n\nFailed to map events do not store the origional event text, however *metatada_sourcecategory* has the origional sourcecategory and *metadata_sourceMessageId* is the origional *_messageid* which is a searchable field in CIP. The bottom panel demonstrates how to use a subquery to return messageids for origional events given a certain set of filters on sec_record_failure.\n\n\n"
                        },
                        {
                            "id": null,
                            "key": "panel7B79B920AFD63A4D",
                            "title": "Map Fail By reason",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9},\"axisY\":{\"title\":\"\",\"titleFontSize\":9,\"labelFontSize\":9,\"logarithmic\":true}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"right\",\"fontSize\":9,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"color\":{\"family\":\"Categorical Default\"},\"series\":{},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure \n metadata_sourcecategory={{sourcecategory}} {{{search_term}}}\n| timeslice\n| count by _timeslice,reason | if(length(reason) > 75,concat(substring(reason,0,75),\"...\"),reason) as reason\n| transpose row _timeslice column reason\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Receipt",
                                    "outputCardinalityLimit": null
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "sourcecategory",
                            "displayName": "sourcecategory",
                            "defaultValue": "*",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "any source category"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        },
                        {
                            "id": null,
                            "name": "search_term",
                            "displayName": "search_term",
                            "defaultValue": "metadata_sourcecategory=*",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "// any.search.term.vs.sec_record_failure,metadata_parser=a,metadata_product=b,metadata_vendor=c,metadata_deviceeventid=d"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": false,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                },
                {
                    "type": "FolderSyncDefinition",
                    "name": "Demo Searches",
                    "description": "",
                    "children": [
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "sec_record search",
                            "search": {
                                "queryText": "// https://help.sumologic.com/Cloud_SIEM_Enterprise/Records%2C_Signals%2C_Entities%2C_and_Insights/15Searching_for_CSE_Records_in_Sumo_Logic\n_index=sec_record_* // phase I _sourceCategory=\"asoc/RECORD/records\"\n\n// phase II have index so don't need json parsing\n//| json field=_raw \"metadata_product\" as product nodrop\n//| json field=_raw \"metadata_vendor\" as vendor nodrop\n//| json field=_raw \"metadata_mapperName\" as mapper nodrop\n//| json field=_raw \"objectType\" as type nodrop \n//| json field=_raw \"objectClassification\" as classification nodrop\n//| json field=_raw \"fields.reason\" as reason nodrop\n\n// phase II sec_record_* index\n| metadata_product as product\n| metadata_vendor as vendor\n| metadata_mapperName as mapper\n| metadata_parser as parser\n| metadata_deviceEventId as deviceeventid\n| objectType as type\n| objectClassification as classification\n| count by _view,vendor, product, mapper, parser,deviceeventid,type, classification | sort by vendor, _count\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "AutoParse",
                                "defaultTimeRange": "-6h"
                            },
                            "searchSchedule": null,
                            "description": "An example search for sec_record_* indexes"
                        }
                    ]
                },
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "SE Collection, Mapping, and Parsing Health Check",
                    "description": "",
                    "title": "SE Collection, Mapping, and Parsing Health Check",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-15m"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panelBC9E7E0A9FF10A40",
                                "structure": "{\"height\":7,\"width\":15,\"x\":9,\"y\":10}"
                            },
                            {
                                "key": "panel21BDD401A3904B4F",
                                "structure": "{\"height\":7,\"width\":15,\"x\":9,\"y\":17}"
                            },
                            {
                                "key": "panelA22B857FA4EA3A46",
                                "structure": "{\"height\":7,\"width\":24,\"x\":0,\"y\":3}"
                            },
                            {
                                "key": "panel3041D84F8AA22841",
                                "structure": "{\"height\":7,\"width\":9,\"x\":0,\"y\":10}"
                            },
                            {
                                "key": "panel1EEDB33B9C983B4C",
                                "structure": "{\"height\":7,\"width\":9,\"x\":0,\"y\":17}"
                            },
                            {
                                "key": "panelPANE-A334297FAE3D1842",
                                "structure": "{\"height\":3,\"width\":24,\"x\":0,\"y\":0}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panelBC9E7E0A9FF10A40",
                            "title": "Failed Reason Trend",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure*\n| timeslice 15m\n//| count by metadata_sourceCategory, %\"fields.reason\", _timeslice\n| count by %\"fields.reason\", _timeslice\n| transpose row _timeslice column %\"fields.reason\"",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel21BDD401A3904B4F",
                            "title": "Failed by _sourceCategory Trend",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure*\n| timeslice 15m\n//| count by metadata_sourceCategory, %\"fields.reason\", _timeslice\n| count by metadata_sourceCategory, _timeslice\n| transpose row _timeslice column metadata_sourceCategory",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelA22B857FA4EA3A46",
                            "title": "Failed Reason by _sourceCategory",
                            "visualSettings": "{\"general\":{\"mode\":\"distribution\",\"type\":\"table\"},\"series\":{}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure*\n| count as today by metadata_sourceCategory, %\"fields.reason\"\n//| sort _count\n| compare with timeshift 1d 1 as vs_yesterday\n| \"https://cse-content.long.sumologic.net/ui/#/search/create?query=_sourceCategory%3D%3Cmy_sc%3E%0A%20%20%20%20%5Bsubquery%3A%20_index%3Dsec_record_failure*%20metadata_sourceCategory%3D%3Cmy_sc%3E%0A%20%20%20%20%7C%20count%20by%20metadata_sourceMessageId%0A%20%20%20%20%7C%20metadata_sourceMessageId%20as%20_messageId%0A%20%20%20%20%7C%20compose%20_messageId%20maxResults%3D10000%5D%0A%7C%20_size%20as%20bytes%0A%7C%20timeslice%201s%0A%7C%20count%20by%20_timeslice%2C%20_messageId%2C%20bytes%2C%20_sourceCategory%2C%20_raw%20%0A%7C%20sort%20by%20_timeslice&startTime=-15m&endTime=-10m\" as url\n//| \"https://service.au.sumologic.com/ui/#/search/create?query=_sourceCategory%3D%3Cmy_sc%3E%0A%20%20%20%20%5Bsubquery%3A%20_index%3Dsec_record_failure*%20metadata_sourceCategory%3D%3Cmy_sc%3E%0A%20%20%20%20%7C%20count%20by%20metadata_sourceMessageId%0A%20%20%20%20%7C%20metadata_sourceMessageId%20as%20_messageId%0A%20%20%20%20%7C%20compose%20_messageId%20maxResults%3D10000%5D%0A%7C%20_size%20as%20bytes%0A%7C%20timeslice%201s%0A%7C%20count%20by%20_timeslice%2C%20_messageId%2C%20bytes%2C%20_sourceCategory%2C%20_raw%20%0A%7C%20sort%20by%20_timeslice&startTime=-15m&endTime=-10m\" as url\n| replace(url,\"%3Cmy_sc%3E\",metadata_sourceCategory) as url\n| toURL(url,\"show_failed_events\") as show_failed_events\n| fields metadata_sourceCategory, %\"fields.reason\", today, today_vs_yesterday,show_failed_events\n| sort today",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel3041D84F8AA22841",
                            "title": "Failed Reasons",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"pie\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"mode\":\"distribution\"},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"showAsTable\":false,\"wrap\":true,\"fontSize\":12}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure*\n| count by %\"fields.reason\"\n| sort _count",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel1EEDB33B9C983B4C",
                            "title": "Failed Categories",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"general\":{\"type\":\"pie\",\"displayType\":\"default\",\"fillOpacity\":1,\"startAngle\":270,\"innerRadius\":\"30%\",\"maxNumOfSlices\":10,\"mode\":\"distribution\"},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"showAsTable\":false,\"wrap\":true,\"fontSize\":12}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_record_failure*\n| count by metadata_sourceCategory\n| sort _count",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": {
                                "type": "BeginBoundedTimeRange",
                                "from": {
                                    "type": "RelativeTimeRangeBoundary",
                                    "relativeTime": "-1d"
                                },
                                "to": null
                            },
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelPANE-A334297FAE3D1842",
                            "title": "",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"series\":{},\"text\":{\"format\":\"markdownV2\",\"showTitle\":false},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "1. Use the link in the below table to [Paste raw events into the Parser](https://help.sumologic.com/Cloud_SIEM_Enterprise/CSE_Schema/Parser_Editor#using-paste-logs)\n2. Share the resultin errors with your Sumo contact or via a support ticket to determine why a record has failed to parse or map"
                        }
                    ],
                    "variables": [],
                    "coloringRules": []
                }
            ]
        },
        {
            "type": "FolderSyncDefinition",
            "name": "Signals",
            "description": "",
            "children": [
                {
                    "type": "FolderSyncDefinition",
                    "name": "Demo Searches",
                    "description": "",
                    "children": [
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Signals - Count",
                            "search": {
                                "queryText": "_sourceCategory=asoc/*signal*  \n| json field=_raw \"rule_name\"\n| json field=_raw \"tags\" nodrop\n//| json field=_raw \"summary\"\n| json field=_raw \"entity_id\"\n| json field=_raw \"suppressed_reasons\" nodrop\n| if (isempty(suppressed_reasons),\"NO\",\"YES\") as suppressed\n| if (suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n//| json field=_raw \"content_type\"\n| json field=_raw \"rule_id\"\n| json field=_raw \"attack_stage\"\n| json field=_raw \"severity\"\n//| json field=_raw \"description\"\n| json field=_raw \"id\"\n//| json field=_raw \"objectClassification\"\n| json field=_raw \"full_records[0].metadata_parser\" as metadata_parser nodrop\n| json field=_raw \"full_records[0].metadata_product\" as product  nodrop\n| json field=_raw \"full_records[0].metadata_vendor\" as vendor nodrop\n| json field=_raw \"full_records[0].user_username\" as user_username nodrop\n| json field=_raw \"full_records[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=_raw \"full_records[0].metadata_mapperName\" as mapperName nodrop\n//| json field=_raw \"full_records[0].fields\" as fields \n| count_distinct(entity_id) as entities,count_distinct(user_username) as usernames, sum(is_suppressed) as suppressed,sum(is_generated) as created,count as signals by rule_id,rule_name,severity,attack_stage,product,vendor,deviceEventId \n| sort rule_name asc\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual",
                                "defaultTimeRange": "Last 60 Minutes"
                            },
                            "searchSchedule": null,
                            "description": "Example signals search to count by common fields."
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Signals - Summary By Rule with entity, stage, product and vendor",
                            "search": {
                                "queryText": "_sourceCategory=asoc/*signal* \n| json field=_raw \"rule_name\"\n| json field=_raw \"tags\" nodrop\n//| json field=_raw \"summary\"\n| json field=_raw \"entity_id\"\n| json field=_raw \"suppressed_reasons\" nodrop\n| if (isempty(suppressed_reasons),\"NO\",\"YES\") as suppressed\n| if (suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n//| json field=_raw \"content_type\"\n| json field=_raw \"rule_id\"\n| json field=_raw \"attack_stage\"\n| json field=_raw \"severity\"\n| json field=_raw \"description\"\n| json field=_raw \"id\"\n//| json field=_raw \"objectClassification\"\n| json field=_raw \"full_records[0].metadata_parser\" as metadata_parser nodrop\n| json field=_raw \"full_records[0].metadata_product\" as product  nodrop\n| json field=_raw \"full_records[0].metadata_vendor\" as vendor nodrop\n| json field=_raw \"full_records[0].user_username\" as user_username nodrop\n| json field=_raw \"full_records[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=_raw \"full_records[0].metadata_mapperName\" as mapperName nodrop\n| json field=_raw \"full_records[0].fields\" as fields \n| max(_messagetime) as latest, sum(is_suppressed) as suppressed,sum(is_generated) as created,count by rule_id,rule_name,severity,entity_id,attack_stage,product,vendor //,metadata_parser,deviceEventId,mapperName \n| sort latest | formatdate(tolong(latest),\"yyyy-MM-dd hh:mm:ss ZZZZ\") as latest\n\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "AutoParse",
                                "defaultTimeRange": "Last 60 Minutes"
                            },
                            "searchSchedule": null,
                            "description": ""
                        },
                        {
                            "type": "SavedSearchWithScheduleSyncDefinition",
                            "name": "Signals Mappings",
                            "search": {
                                "queryText": "_sourceCategory=asoc/*signal*  \n| json field=_raw \"rule_name\"\n//| json field=_raw \"tags\"\n//| json field=_raw \"summary\"\n//| json field=_raw \"entity_id\"\n| json field=_raw \"suppressed_reasons\" nodrop\n| if (isempty(suppressed_reasons),\"NO\",\"YES\") as suppressed\n| if (suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n| json field=_raw \"content_type\"\n| json field=_raw \"rule_id\"\n//| json field=_raw \"attack_stage\"\n//| json field=_raw \"severity\"\n//| json field=_raw \"description\"\n//| json field=_raw \"id\"\n//| json field=_raw \"objectClassification\"\n| json field=_raw \"full_records[0].metadata_parser\" as metadata_parser nodrop\n| json field=_raw \"full_records[0].metadata_product\" as product  nodrop\n| json field=_raw \"full_records[0].metadata_vendor\" as vendor nodrop\n//| json field=_raw \"full_records[0].user_username\" as user_username nodrop\n| json field=_raw \"full_records[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=_raw \"full_records[0].metadata_mapperName\" as mapperName nodrop\n//| json field=_raw \"full_records[0].fields\" as fields \n| concat (rule_id,\" \",rule_name) as rule\n|  sum(is_suppressed) as suppressed,sum(is_generated) as created,count by rule,product,vendor,metadata_parser,mapperName,deviceEventId| sort _count\n",
                                "byReceiptTime": false,
                                "viewName": "",
                                "viewStartTime": "1970-01-01T00:00:00Z",
                                "queryParameters": [],
                                "parsingMode": "Manual",
                                "defaultTimeRange": "04/13/2022 7:07:25 AM to 04/13/2022 10:07:25 AM"
                            },
                            "searchSchedule": null,
                            "description": "Example table showing signal mappings and parsers."
                        }
                    ]
                },
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "Signals - Suppression",
                    "description": "A dashboard for reviewing mapping, parsers and suppression.",
                    "title": "Signals - Suppression",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-6h"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panel0A9E954A96FCAB46",
                                "structure": "{\"height\":16,\"width\":12,\"x\":12,\"y\":3}"
                            },
                            {
                                "key": "panelB8321E8CBBC82A4D",
                                "structure": "{\"height\":3,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel866FFE7EB4F27942",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":11}"
                            },
                            {
                                "key": "panelD585B46F87DFA841",
                                "structure": "{\"height\":10,\"width\":24,\"x\":0,\"y\":19}"
                            },
                            {
                                "key": "panelE80F7825AE3D8B44",
                                "structure": "{\"height\":12,\"width\":24,\"x\":0,\"y\":29}"
                            },
                            {
                                "key": "panel658200C0A7212944",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":3}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panel0A9E954A96FCAB46",
                            "title": "Rule Signal Counts  Showing Suppression Count",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":0,\"labelFontSize\":10,\"title\":\"rule_name\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"title\":\"\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"gridThickness\":1,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"},\"axisY2\":{\"title\":\"\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridThickness\":0,\"valueFormatString\":\"\",\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"}},\"series\":{},\"general\":{\"type\":\"bar\",\"displayType\":\"default\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[{\"series\":[\"NO\"],\"queries\":[],\"properties\":{\"color\":\"#005982\"}},{\"series\":[\"YES\"],\"queries\":[],\"properties\":{\"color\":\"#bf2121\"}}],\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal \n {{{keywords}}}\n \n| where !(isempty(suppressedreasons))\n//| where suppressed = \"YES\"\n| count by rulename | sort _count\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB8321E8CBBC82A4D",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "This dashboard shows an overview and some detailed tabular views for reflected CSE Signal events, specifically mapping, parsers and suppression.\n\nThe data source is the sec_signal index.\n\nFor more help on signal suppression reasons and configuration see: https://help.sumologic.com/Cloud_SIEM_Enterprise/Records%2C_Signals%2C_Entities%2C_and_Insights/About_Signal_Suppression\n\nVersion: 20220830"
                        },
                        {
                            "id": null,
                            "key": "panel866FFE7EB4F27942",
                            "title": "Signal Suppression Vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"generated\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false,\"minimum\":0},\"axisY2\":{\"minimum\":0,\"title\":\"Suppressed\"}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[{\"series\":[\"suppressed\"],\"queries\":[],\"properties\":{\"axisYType\":\"secondary\"}},{\"series\":[\"suppressed_7d\"],\"queries\":[],\"properties\":{\"axisYType\":\"secondary\"}}]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal \n {{{keywords}}}\n\n| if (isempty(suppressedReasons),\"NO\",\"YES\") as suppressed\n| where suppressed = \"YES\"\n| if (suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| timeslice  | sum(is_suppressed) as suppressed  by _timeslice | compare with timeshift 7d\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelD585B46F87DFA841",
                            "title": "Suppressed Signals Summary",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(entityid) as entities,sum(is_suppressed) as suppressed,sum(is_generated) as generated by rule,product,vendor,mapperName,sourceCategory\n| sort suppressed",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelE80F7825AE3D8B44",
                            "title": "Suppression Reasons",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_index=sec_signal\n  {{{keywords}}}\n\n| json field=entities \"[0].value\" as entityid\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n| where suppressed=\"YES\"\n\n| concat (ruleid,\" \",rulename) as rule\n| parse regex field=suppressedreasons \"\\\"(?<suppress_by>[^\\\":\\[\\]]+)\" multi\n| count_distinct(id) as suppressed_signals,values(suppress_by) as reasons by entityid,rule | sort suppressed_signals\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel658200C0A7212944",
                            "title": "Generated vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"generated\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false,\"minimum\":0},\"axisY2\":{\"minimum\":0,\"title\":\"Suppressed\"}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal \n {{{keywords}}}\n\n| if (isempty(suppressedReasons),\"NO\",\"YES\") as suppressed\n| where suppressed = \"NO\"\n| if (suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| timeslice  | sum(is_generated) as generated  by _timeslice | compare with timeshift 7d\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "keywords",
                            "displayName": "keywords",
                            "defaultValue": "*",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "keyword,wildcarded*,// any sumo syntax"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                },
                {
                    "type": "DashboardV2SyncDefinition",
                    "name": "Signals Console (sec_signal)",
                    "description": "",
                    "title": "Signals Console (sec_signal)",
                    "theme": "Dark",
                    "topologyLabelMap": {
                        "data": {}
                    },
                    "refreshInterval": 0,
                    "timeRange": {
                        "type": "BeginBoundedTimeRange",
                        "from": {
                            "type": "RelativeTimeRangeBoundary",
                            "relativeTime": "-6h"
                        },
                        "to": null
                    },
                    "layout": {
                        "layoutType": "Grid",
                        "layoutStructures": [
                            {
                                "key": "panel0AFB51868C47D84F",
                                "structure": "{\"height\":9,\"width\":8,\"x\":0,\"y\":10}"
                            },
                            {
                                "key": "panel4286864B91157845",
                                "structure": "{\"height\":12,\"width\":24,\"x\":0,\"y\":56}"
                            },
                            {
                                "key": "panel0A9E954A96FCAB46",
                                "structure": "{\"height\":13,\"width\":8,\"x\":16,\"y\":21}"
                            },
                            {
                                "key": "panelD33237CAB543384A",
                                "structure": "{\"height\":11,\"width\":24,\"x\":0,\"y\":68}"
                            },
                            {
                                "key": "panel96A9C7808143C846",
                                "structure": "{\"height\":9,\"width\":8,\"x\":16,\"y\":10}"
                            },
                            {
                                "key": "panelB8321E8CBBC82A4D",
                                "structure": "{\"height\":2,\"width\":24,\"x\":0,\"y\":0}"
                            },
                            {
                                "key": "panel2746ADF4BE2E0947",
                                "structure": "{\"height\":9,\"width\":8,\"x\":8,\"y\":10}"
                            },
                            {
                                "key": "panelF43A4848978F4A4D",
                                "structure": "{\"height\":11,\"width\":12,\"x\":0,\"y\":34}"
                            },
                            {
                                "key": "panel866FFE7EB4F27942",
                                "structure": "{\"height\":8,\"width\":12,\"x\":12,\"y\":2}"
                            },
                            {
                                "key": "panel4AFCC1EE9A6D7842",
                                "structure": "{\"height\":8,\"width\":12,\"x\":0,\"y\":2}"
                            },
                            {
                                "key": "panel6DE68D49935C5943",
                                "structure": "{\"height\":13,\"width\":8,\"x\":0,\"y\":21}"
                            },
                            {
                                "key": "panel2CBA5554B2361B4C",
                                "structure": "{\"height\":2,\"width\":24,\"x\":0,\"y\":19}"
                            },
                            {
                                "key": "panelE29AD4A4B2DCBB4D",
                                "structure": "{\"height\":11,\"width\":12,\"x\":12,\"y\":34}"
                            },
                            {
                                "key": "panel8ED7A381857BC942",
                                "structure": "{\"height\":1,\"width\":24,\"x\":0,\"y\":90}"
                            },
                            {
                                "key": "panel1F95FA099698C845",
                                "structure": "{\"height\":15,\"width\":24,\"x\":0,\"y\":101}"
                            },
                            {
                                "key": "panel36605DDD815EDB43",
                                "structure": "{\"height\":10,\"width\":12,\"x\":0,\"y\":91}"
                            },
                            {
                                "key": "panel67CD02898A5E2B4D",
                                "structure": "{\"height\":10,\"width\":12,\"x\":12,\"y\":91}"
                            },
                            {
                                "key": "panel38745B00983BDA4B",
                                "structure": "{\"height\":13,\"width\":8,\"x\":8,\"y\":21}"
                            },
                            {
                                "key": "panelA36D415F933C0849",
                                "structure": "{\"height\":11,\"width\":24,\"x\":0,\"y\":79}"
                            },
                            {
                                "key": "panelAA287F1FA8940841",
                                "structure": "{\"height\":11,\"width\":24,\"x\":0,\"y\":45}"
                            }
                        ]
                    },
                    "panels": [
                        {
                            "id": null,
                            "key": "panel0AFB51868C47D84F",
                            "title": "Rules Over Time",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| where (isempty(suppressedreasons))\n\n//| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| timeslice  | count by rule,_timeslice | transpose row _timeslice column rule\n\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel4286864B91157845",
                            "title": "Signals - High Level Summary",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\",\"decimals\":0},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(entityid) as entities,sum(is_suppressed) as suppressed,sum(is_generated) as generated by rule,severity,product,vendor,sourceCategory\n| severity * generated as total_severity\n| sort total_severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel0A9E954A96FCAB46",
                            "title": "Top Signal Volumes Overall",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":10,\"labelFontSize\":10,\"title\":\"rule_name\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"title\":\"\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"gridThickness\":1,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"},\"axisY2\":{\"title\":\"\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridThickness\":0,\"valueFormatString\":\"\",\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"}},\"series\":{},\"general\":{\"type\":\"bar\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":true},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| concat (ruleid,\" \",rulename) as rule\n\n| sum(is_suppressed) as suppressed,sum(is_generated)  as generated by rule | sort generated \n| suppressed + generated as t | sort t | limit 25 | fields -t\n//| transpose row {{graph_by}} column suppressed,generated \n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelD33237CAB543384A",
                            "title": "metadata_parser,mapperName,deviceEventId",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=fullRecords \"[0].metadata_parser\" as parser nodrop\n| concat (ruleid,\" \",rulename) as rule\n\n|  sum(is_suppressed) as suppressed,sum(is_generated) as created by rule,product,vendor,sourceCategory,parser,mapperName,deviceEventId| sort created\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel96A9C7808143C846",
                            "title": "Device Event Id",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| where (isempty(suppressedreasons))\n\n//| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n| timeslice \n|  count by deviceEventId,_timeslice| transpose row _timeslice column deviceeventid\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelB8321E8CBBC82A4D",
                            "title": "About",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "This dashboard shows an overview and some detailed tabular views for reflected CSE Signal events using sec_signal index.\n\nVersion: 20221025"
                        },
                        {
                            "id": null,
                            "key": "panel2746ADF4BE2E0947",
                            "title": "Product and Vendor",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"column\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| where (isempty(suppressedreasons))\n\n//| json field=entities \"[0].value\" as entityid nodrop\n//\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n| concat (product,\" \" ,vendor) as pv\n|timeslice \n|  count by _timeslice,pv| transpose row _timeslice column pv\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelF43A4848978F4A4D",
                            "title": "Highest Impacted Entities",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":10,\"labelFontSize\":10,\"title\":\"\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"tot_sev\"}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(rule) as rules,sum(is_suppressed) as suppressed,sum(is_generated) as generated by entityid,severity\n| severity * generated as total_severity\n| sort total_severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel866FFE7EB4F27942",
                            "title": "Signals Suppressed Vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"generated\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false,\"minimum\":0},\"axisY2\":{\"minimum\":0,\"title\":\"Suppressed\"}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal {{{keywords}}}\n\n| where !(isempty(suppressedReasons))\n\n| timeslice  | count as suppressed  by _timeslice | compare with timeshift 7d",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel4AFCC1EE9A6D7842",
                            "title": "Signals Generated Vs Last Week",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"title\":\"\",\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"title\":\"generated\",\"titleFontSize\":12,\"labelFontSize\":12,\"logarithmic\":false,\"minimum\":0},\"axisY2\":{\"minimum\":0,\"title\":\"Suppressed\"}},\"legend\":{\"enabled\":true,\"verticalAlign\":\"bottom\",\"fontSize\":12,\"maxHeight\":50,\"showAsTable\":false,\"wrap\":true},\"series\":{},\"general\":{\"type\":\"line\",\"displayType\":\"default\",\"markerSize\":5,\"lineDashType\":\"solid\",\"markerType\":\"none\",\"lineThickness\":1,\"mode\":\"timeSeries\"},\"color\":{\"family\":\"Categorical Default\"},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal  {{{keywords}}}\n\n| where (isempty(suppressedReasons))\n//\n//\n| timeslice  | count as generated  by _timeslice | compare with timeshift 7d",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel6DE68D49935C5943",
                            "title": "Top Generating Rules (excludes suppressed)",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":10,\"labelFontSize\":10,\"title\":\"rule_name\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"title\":\"generated\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"gridThickness\":1,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"},\"axisY2\":{\"title\":\"\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridThickness\":0,\"valueFormatString\":\"\",\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"}},\"series\":{},\"general\":{\"type\":\"bar\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":false},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n| where is_generated=1\n| concat (ruleid,\" \",rulename) as rule\n\n| sum(is_suppressed) as suppressed,sum(is_generated)  as generated by rule | sort generated | limit 25\n//| transpose row {{graph_by}} column suppressed,generated \n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel2CBA5554B2361B4C",
                            "title": "Signals Reports",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\",\"fontSize\":12},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": "These panels show more detailed breakdowns of signals."
                        },
                        {
                            "id": null,
                            "key": "panelE29AD4A4B2DCBB4D",
                            "title": "Highest Impacting Rules By Total Severity ",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":10,\"labelFontSize\":10,\"title\":\"\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"tot_sev\"}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(entityid) as enitities,sum(is_suppressed) as suppressed,sum(is_generated) as generated by rule,severity\n| severity * generated as total_severity\n| sort total_severity",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel8ED7A381857BC942",
                            "title": "Tagging",
                            "visualSettings": "{\"general\":{\"mode\":\"TextPanel\",\"type\":\"text\",\"displayType\":\"default\"},\"title\":{\"fontSize\":14},\"text\":{\"format\":\"markdownV2\"},\"series\":{},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "TextPanel",
                            "text": ""
                        },
                        {
                            "id": null,
                            "key": "panel1F95FA099698C845",
                            "title": "Rules With Tags",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=fullRecords \"[0].metadata_parser\" as parser nodrop\n| concat (ruleid,\" \",rulename) as rule\n\n| parse regex field=tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n//| count by attack_stage,tags | sort _count\n\n//| where tagname matches \"_mitreAttackTech*\"\n//|  sum(is_generated) as created by tagvalue,rule,product,vendor,entityid,severity,description| created * severity as total_sev | sort total_sev\n| values(entityid) as entity_list,max(severity) as max_sev,count_distinct(entityid) as entities by rule,tagname,tagvalue,product,vendor,severity | sort max_sev,rule asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel36605DDD815EDB43",
                            "title": "Mitre Techniques Summary",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=fullRecords \"[0].metadata_parser\" as parser nodrop\n| concat (ruleid,\" \",rulename) as rule\n\n| parse regex field=tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n//| count by attack_stage,tags | sort _count\n\n| where tagname matches \"_mitreAttackTech*\"\n//|  sum(is_generated) as created by tagvalue,rule,product,vendor,entityid,severity,description| created * severity as total_sev | sort total_sev\n| max(severity) as max_sev,count_distinct(entityid) as entities,count_distinct(rule) as rules by tagvalue \n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel67CD02898A5E2B4D",
                            "title": "Non Mitre Tags",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| if (isempty(suppressedreasons),\"NO\",\"YES\") as suppressed\n\n| if(suppressed=\"YES\",1,0) as is_suppressed\n| if(suppressed=\"NO\",1,0) as is_generated\n\n| json field=entities \"[0].value\" as entityid nodrop\n\n| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n| json field=fullRecords \"[0].metadata_product\" as product nodrop\n| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n| json field=fullRecords \"[0].metadata_parser\" as parser nodrop\n| concat (ruleid,\" \",rulename) as rule\n\n| parse regex field=tags \"\\\"(?<tagname>[^:\\\"]+):(?<tagvalue>[^:\\\"]+)\" multi\n//| count by attack_stage,tags | sort _count\n\n| where !(tagname matches \"_mitreAttack*\")\n//|  sum(is_generated) as created by tagvalue,rule,product,vendor,entityid,severity,description| created * severity as total_sev | sort total_sev\n| max(severity) as max_sev,count_distinct(entityid) as entities,count_distinct(rule) as rules by tagname,tagvalue ",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panel38745B00983BDA4B",
                            "title": "Rules by Total Severity (excludes suppressed)",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":10,\"labelFontSize\":10,\"title\":\"rule_name\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"title\":\"generated\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"gridThickness\":1,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"},\"axisY2\":{\"title\":\"\",\"titleFontSize\":10,\"titleFontFamily\":\"Lab Grotesque Medium, \\\"Arial Bold\\\", sans-serif\",\"titleFontColor\":\"#EBEFF2\",\"titleFontWeight\":\"normal\",\"labelFontColor\":\"#EBEFF2\",\"lineColor\":\"#DDE4E9\",\"stripLines\":null,\"lineThickness\":0,\"labelFontSize\":10,\"tickColor\":\"#344666\",\"logarithmic\":false,\"linear\":false,\"unit\":{\"value\":\"\",\"isCustom\":false},\"gridThickness\":0,\"valueFormatString\":\"\",\"gridColor\":\"#344666\",\"labelFontFamily\":\"Lab Grotesque Regular, \\\"Arial\\\", sans-serif\",\"labelFontWeight\":\"normal\"}},\"series\":{},\"general\":{\"type\":\"bar\",\"displayType\":\"stacked\",\"fillOpacity\":1,\"mode\":\"distribution\"},\"color\":{\"family\":\"Categorical Default\"},\"legend\":{\"enabled\":false},\"overrides\":[]}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| where (isempty(suppressedreasons))\n| concat (ruleid,\" \",rulename) as rule\n| sum(severity)  as total_severity by rule | sort total_severity | limit 25\n//| transpose row {{graph_by}} column suppressed,generated \n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelA36D415F933C0849",
                            "title": "Suppressed signals reasons",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":12,\"labelFontSize\":12},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12}},\"series\":{},\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"},\"legend\":{\"enabled\":false}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "\n_index=sec_signal\n  {{{keywords}}}\n\n| json field=entities \"[0].value\" as entityid\n| where !(isempty(suppressedreasons))\n\n| concat (ruleid,\" \",rulename) as rule\n| parse regex field=suppressedreasons \"\\\"(?<suppress_by>[^\\\":\\[\\]]+)\" multi\n| count_distinct(id) as suppressed_signals,values(suppress_by) as reasons by entityid,rule,severity | sort suppressed_signals\n\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Manual",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        },
                        {
                            "id": null,
                            "key": "panelAA287F1FA8940841",
                            "title": "Rule Index",
                            "visualSettings": "{\"title\":{\"fontSize\":14},\"axes\":{\"axisX\":{\"titleFontSize\":10,\"labelFontSize\":10,\"title\":\"\",\"labelMaxWidth\":250,\"labelWrap\":false},\"axisY\":{\"titleFontSize\":12,\"labelFontSize\":12,\"title\":\"tot_sev\"}},\"series\":{},\"legend\":{\"enabled\":false},\"overrides\":[],\"general\":{\"type\":\"table\",\"displayType\":\"default\",\"paginationPageSize\":100,\"fontSize\":12,\"mode\":\"distribution\"}}",
                            "keepVisualSettingsConsistentWithParent": true,
                            "panelType": "SumoSearchPanel",
                            "queries": [
                                {
                                    "transient": false,
                                    "queryString": "_index=sec_signal\n  {{{keywords}}}\n\n| where (isempty(suppressedreasons))\n\n| json field=entities \"[0].value\" as entityid nodrop\n//\n//| json field=fullRecords \"[0].metadata_vendor\" as vendor nodrop\n//| json field=fullRecords \"[0].metadata_sourceCategory\" as sourceCategory nodrop\n//| json field=fullRecords \"[0].metadata_product\" as product nodrop\n//| json field=fullRecords \"[0].metadata_mapperName\" as mapperName nodrop\n//| json field=fullRecords \"[0].metadata_deviceEventId\" as deviceEventId nodrop\n\n| concat (ruleid,\" \",rulename) as rule\n\n| count_distinct(entityid) as enitities,count as generated by rule,severity,description,tags | sort rule asc\n",
                                    "queryType": "Logs",
                                    "queryKey": "A",
                                    "metricsQueryMode": null,
                                    "metricsQueryData": null,
                                    "tracesQueryData": null,
                                    "spansQueryData": null,
                                    "parseMode": "Auto",
                                    "timeSource": "Message",
                                    "outputCardinalityLimit": 1000
                                }
                            ],
                            "description": "",
                            "timeRange": null,
                            "coloringRules": null,
                            "linkedDashboards": []
                        }
                    ],
                    "variables": [
                        {
                            "id": null,
                            "name": "keywords",
                            "displayName": "keywords",
                            "defaultValue": "*",
                            "sourceDefinition": {
                                "variableSourceType": "CsvVariableSourceDefinition",
                                "values": "keyword,wildcarded*,// any sumo syntax"
                            },
                            "allowMultiSelect": false,
                            "includeAllOption": true,
                            "hideFromUI": false,
                            "valueType": "Any"
                        }
                    ],
                    "coloringRules": []
                }
            ]
        }
    ]
}